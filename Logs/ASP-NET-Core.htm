<!DOCTYPE html>
<html>
    <head>
        <title>ASP.NET Core</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <style>@import url('https://fonts.googleapis.com/css2?family=M+PLUS+1&family=M+PLUS+1+Code&display=swap');body{margin:0;background-color:#111;color:#ddd;font-family:'M PLUS 1',sans-serif;font-size:1rem;line-height:1.5;overflow-wrap:break-word;word-wrap:break-word}a{color:#69c;text-decoration:underline}a:hover,a:active,a:focus{font-weight:bold}div.task,div.note,div.file,div.image{margin:10px;border:1px solid transparent}div.entries>div.note{border:1px solid #333}div.title{background-color:#538;padding:20px 30px;font-size:2rem;font-weight:bold}a.title{color:#ddd;text-decoration:none}a.title:hover,a.title:active,a.title:focus{text-decoration:underline}div.streaming{background-color:#131}div.streaming:hover{background-color:#353}div.done{background-color:#115}div.done:hover{background-color:#337}div.canceled{background-color:#511}div.canceled:hover{background-color:#733}div.task_contents{margin:10px 15px}span.task_contents{font-weight:bold}a.permalink{visibility:hidden}div.task:hover a.permalink{visibility:visible}div.note{background-color:#111}p.note_contents{margin:15px 20px}div.file{border:1px solid #333;background-color:#111;padding:15px 20px}div.image{border:1px solid #333;background-color:#111;padding:10px}img.image{box-sizing:border-box;vertical-align:top;max-width:100%}div.images{margin:10px;border:1px solid #333;background-color:#111;padding:10px;display:flex;justify-content:flex-start;gap:10px;flex-wrap:wrap}div.images>div.image{margin:0;border-style:none;padding:0}ul.files{margin:10px;border:1px solid #333;background-color:#111;padding-top:15px;padding-inline:40px 15px;padding-bottom:15px}div.note_ai_generated{margin:10px;border:1px solid transparent;background-color:#333}div.note_ai_generated>*{margin:15px 20px}div.note_ai_generated h1{font-size:2rem;font-weight:bold}div.note_ai_generated h2{font-size:1.8rem;font-weight:bold}div.note_ai_generated h3{font-size:1.6rem;font-weight:bold}div.note_ai_generated h4{font-size:1.4rem;font-weight:bold}div.note_ai_generated h5{font-size:1.2rem;font-weight:bold}div.note_ai_generated h6{font-size:1rem;font-weight:bold}pre{background-color:#555;padding:15px 20px;white-space:pre-wrap}code{font-family:'M PLUS 1 Code',monospace}</style>
    </head>
    <body>
        <div class="title">
            <a href="ASP-NET-Core.htm" class="title">ASP.NET Core</a>
        </div>
        <div class="entries">
            <div class="note">
                <div class="note_contents">
                    <p class="note_contents">名前が乱立していて、まずはそこから。</p>
                    <p class="note_contents">自分は、ASP.NET Web Forms でなら、20年近く前に業務システムを書いていた。</p>
                    <p class="note_contents">その後、MVC が出てきて、ASP.NET MVC と呼ばれていたと思う。そのうち Core が出てきては、先ほど調べたときには、ASP.NET Core MVC というのも出てきた。となると、Core でない MVC もあり、まだメンテされている可能性がある。</p>
                    <p class="note_contents">MVC の頃から Razor という単語はあったが、Razor Pages となると MVC 的なことをせず、しかし、コードに mvc という識別子はちょくちょく入るようだ。MVC を使わないが、MVC 的なコードを全てオフにするとおそらく動かない。それでは構成に問題がある。</p>
                    <p class="note_contents">そういったところについてきちんと調べる。</p>
                    <!-- Task: cb7b80c3-0951-4ce9-b70b-e325bc20495d -->
                </div>
            </div>
            <div class="note">
                <div class="note_contents">
                    <p class="note_contents">PowerShell を好きになれず、Python に手を出し、そちらが子どものオモチャ並みに簡単で好きになり、ついでに Node.js にも手を出し始めている。</p>
                    <p class="note_contents">すぐにでも完成させないといけない中規模の業務システムがあり、.NET 系の技術でつくる考えだったが、Node.js についてはいろいろなところで聞いていて、迷走しかけているようである ASP.NET シリーズより盛り上がっている感があるので、ASP.NET 系＋どうせ絶対に JavaScript は必要という構成だけでなく、JavaScript のみで完結して人気も高い Node.js というのも考えないわけにはいかず、両方の学びに着手している。</p>
                    <p class="note_contents">ゴールは、あくまでそのシステムだ。グローバル（中小）企業における言葉の壁を乗り越えての CRM および社内情報共有のシステムで、ついでに顧客との商談もそのシステム上で翻訳機能の支援を受けて行えたら完璧だ。</p>
                    <p class="note_contents">ブログに毛が生えたくらいのデータ構造なので実は難しくもなんともない。ASP.NET Web Forms で気合いとノリだけで書いてしまうなら、フルタイムでそれだけやれば、たぶん1週間もかからない。</p>
                    <p class="note_contents">しかし、やるならスマートに、きれいに書きたく、ASP.NET 系だとどうしても最初の壁が一番高くて、また、ここ半年くらいは本業がとにかく忙しくて、今まで着手が遅れた。</p>
                    <p class="note_contents">幸いにも2月に入ったくらいからはコーディングの時間を取れるようになっていて、#100DaysOfCode を始めたところ、それもなんとか続いている。良い習慣ができているので、上記のシステムをつくるというゴールをブレさせることなく、それに適した ASP.NET 系の体系を探したり、それによる小さなツールを書いてみたりを試みる。</p>
                    <!-- Task: cb7b80c3-0951-4ce9-b70b-e325bc20495d -->
                </div>
            </div>
            <div id="9e91b4e4-2f3f-4ecc-872f-340d114802d5" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">このタスクリストのログが出力されるようにする</span>
                    <a href="#9e91b4e4-2f3f-4ecc-872f-340d114802d5" class="permalink">&infin;</a>
                </div>
            </div>
            <div class="note">
                <div class="note_contents">
                    <p class="note_contents">このタスクリストをつくってから2ヶ月が経過した。</p>
                    <p class="note_contents">その間、Python に打ち込んだ。やはり簡単な言語だった。おまけに、何でも誰かがすでに実装してくれている。情報も豊富だ。数日で「調べたら何でも書ける」と思い込むくらいになった。つまり基本的な文法などを理解した。数週間でライブラリー的なものができてきて、ツールもいくつか完成した。Pylint や mypy を入れたところ、「作法」がまだだったので最初は何百もの警告が出たが、ただ書き方の問題であり、数日で全て対処できた。その前後から AI 関連のコードを書き、langtree のモジュールを完成させた。AI にコードをチェックしてもらったところ、データが膨大になった場合のパフォーマンスなど、自分としては現時点では重要と考えていないところについてのみ警告をもらった。本質的には良く書けていることを確認できた。他者の書くコードを見ていても自分とレベルの違いを感じることはない。C/C++/C# が元々できての Python であり、デザインパターンやアルゴリズムなどを理解していての開発を Python で不自由なくできるようになったので、もう Python については「習熟」を言ってよい。</p>
                    <p class="note_contents">そろそろウェブ開発に戻るわけだが、予定通り Node.js をやるのか、元々そこそこできる C# に戻り、古い知識は全く役に立たない ASP.NET Core を新たに学ぶのかの二択においては、後者が良さそうだ。</p>
                    <p class="note_contents">Python をやっていて最初は「何でもすぐにできあがる」と喜んだが、mypy を入れて型づけをするなら C# と比べて生産性に大きく勝る言語でもなく、「ちゃんと書けば、結局 Python でも時間はかかる」という認識に落ち着いた。しかも Python の型づけは、イメージとしては「アノテーションで装飾されたコードを、インタープリターを使って走らせ、ランタイムで引っかかったところのみ警告として出力する」というもののようで、C# の「ほんの少しでも、ほんの一つでもミスがあれば、そもそもコンパイルできない」というのとは違う。たとえば None で初期化された変数に直後に str が設定されていれば、「たぶんこれは str だ」と認識されるようで、その後 int を入れると叱ってくる。しかし、叱ってこないときもあったり、str を設定していても「型づけを行え」と叱ってくることもあったりで、信頼性が低い。Python のタイプチェッカーは多数あるそうだ。それはつまり、どれも完璧でないということだ。それでも mypy か何かを入れて「ある程度」を望むのか、やめてしまって生産性は上がるがリスクも上がるのかという二択が好きでない。</p>
                    <p class="note_contents">結局、C# は、OpenAI など、一部のパッケージが C# では（まだ）用意されていないだけで、言語的な冗長性はなく、同じ品質のコードを書くなら Python と作業量が異ならず、それでいて C# の方が完璧主義かつコンパイル言語なので厳密かつ高速に動くということになる。</p>
                    <p class="note_contents">Node.js をやろうと思っていたが、同じインタープリター言語なので、おそらく Python と同じような使用感だろう。自分は10年以上前から「そろそろ JavaScript をやらないと」と思いながらも何度手を出しても好きになれず C# ばかり書いてきた。その根本的な理由は、「この書き方でよいのか確信を持てない」というコードでも動いてしまうことだ。Python もそういうところがある。Pylint も mypy も入れず「動けばよい」のコードを書いていた頃には Python をすごいと思ったが、きちんと書くなら C# の方が厳密かつ高速だ。Node.js も、ベースが自分の嫌いな JavaScript であり、あくまでインタープリター言語なので、C# を上回る使用感で、より性能や安全性の高い業務システムを自分が書ける気がしなくなっている。</p>
                    <p class="note_contents">絶対に JavaScript は必要だが、ASP.NET Core のページに組み込んで UI 部分のみ任せるのが妥当だろう。そのときも、TypeScript の方が良いだろう。Python をやっていて結局型づけが問題になって「C# の方が良かった」と思い始めているので、初めから &quot;type&quot; に重きを置く TypeScript の方で必要最小限のコードのみ書くのが合理的な構成と思われる。</p>
                    <p class="note_contents">今はちょっとした節目なので、こういったことをここに書いてみた。</p>
                    <p class="note_contents">今後は、Python で langtree やその関連ツールをつくり、ASP.NET Core で業務システムをつくり、TODO システム程度のものは Python でつくってみて、これらの SSO を実現し、いずれにおいても UI を動的に動かすところには JavaScript/TypeScript を使う考えだ。</p>
                    <!-- Task: 73ee4938-01cf-4c76-9a20-fd3900953ab7 -->
                </div>
            </div>
        </div>
    </body>
</html>
