<!DOCTYPE html>
<html>
    <head>
        <title>開発</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <style>@import url('https://fonts.googleapis.com/css2?family=M+PLUS+1&family=M+PLUS+1+Code&display=swap');body{margin:0;background-color:#111;color:#ddd;font-family:'M PLUS 1',sans-serif;font-size:1rem;line-height:1.5;overflow-wrap:break-word;word-wrap:break-word}a{color:#69c;text-decoration:underline}a:hover,a:active,a:focus{font-weight:bold}div.task,div.note,div.file,div.image{margin:10px;border:1px solid transparent}div.entries>div.note{border:1px solid #333}div.title{background-color:#538;padding:20px 30px;font-size:2rem;font-weight:bold}a.title{color:#ddd;text-decoration:none}a.title:hover,a.title:active,a.title:focus{text-decoration:underline}div.streaming{background-color:#131}div.streaming:hover{background-color:#353}div.done{background-color:#115}div.done:hover{background-color:#337}div.canceled{background-color:#511}div.canceled:hover{background-color:#733}div.task_contents{margin:10px 15px}span.task_contents{font-weight:bold}a.permalink{visibility:hidden}div.task:hover a.permalink{visibility:visible}div.note{background-color:#111}p.note_contents{margin:15px 20px}div.file{border:1px solid #333;background-color:#111;padding:15px 20px}div.image{border:1px solid #333;background-color:#111;padding:10px}img.image{box-sizing:border-box;vertical-align:top;max-width:100%}div.images{margin:10px;border:1px solid #333;background-color:#111;padding:10px;display:flex;justify-content:flex-start;gap:10px;flex-wrap:wrap}div.images>div.image{margin:0;border-style:none;padding:0}ul.files{margin:10px;border:1px solid #333;background-color:#111;padding-top:15px;padding-inline:40px 15px;padding-bottom:15px}div.note_ai_generated{margin:10px;border:1px solid transparent;background-color:#333}div.note_ai_generated>*{margin:15px 20px}div.note_ai_generated h1{font-size:2rem;font-weight:bold}div.note_ai_generated h2{font-size:1.8rem;font-weight:bold}div.note_ai_generated h3{font-size:1.6rem;font-weight:bold}div.note_ai_generated h4{font-size:1.4rem;font-weight:bold}div.note_ai_generated h5{font-size:1.2rem;font-weight:bold}div.note_ai_generated h6{font-size:1rem;font-weight:bold}pre{background-color:#555;padding:15px 20px;white-space:pre-wrap}code{font-family:'M PLUS 1 Code',monospace}</style>
    </head>
    <body>
        <div class="title">
            <a href="Development.htm" class="title">開発</a>
        </div>
        <div class="entries">
            <div id="311737dc-03bb-4255-98a7-67cc1b8b113c" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">ChatGPT にトラックの修理明細書のスキャン画像を読ませて何の故障か聞いてみる</span>
                    <a href="#311737dc-03bb-4255-98a7-67cc1b8b113c" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">もっと簡単なものでも絶望的に読めなかった。修理明細書の書式は会社ごとに異なるので、全自動はおそらく無理。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="9c3cc69d-faae-4b19-b981-a9715e70f3b0" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">OneDrive の Personal Vault について調べる</span>
                    <a href="#9c3cc69d-faae-4b19-b981-a9715e70f3b0" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">2段階認証の必要なフォルダー。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="d372a939-2a2d-4036-95d3-f0d2939aecb4" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">動画ファイルのメタデータを読めるようにする</span>
                    <a href="#d372a939-2a2d-4036-95d3-f0d2939aecb4" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">GoPro から USB ケーブルでビデオを転送すると、ファイルのタイムスタンプが転送日時になる。それでは撮影日時が分からない。メタデータに入っているようなので読めるように。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ノリで mediaTime を書いた。これにより写真もビデオも、タイムゾーンまでゆるく考慮して撮影日時のデータを読めるようになった。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="8a6e83ad-c957-452c-842e-d4cb0a83f50f" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">.NET 8.0 について調べる</span>
                    <a href="#8a6e83ad-c957-452c-842e-d4cb0a83f50f" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">見出し程度は見た。自分の生産性を劇的に高める改善点はなさそう。もうちょっと良い書き方ができるようになったなどのところについては、困るかコンパイラーに怒られるかすれば直す程度に。</p>
                            <p class="note_contents">What&#39;s new in ASP.NET Core 8.0 | Microsoft Learn<br />
                                <a href="https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-8" target="_blank" class="url">https://learn.microsoft.com/en-us/dotnet/core/whats-new/dotnet-8</a></p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="9f978d07-0378-4d8e-a04c-58873e880e54" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">プロジェクトのアーカイブに *.pdb を入れるべきか調べる</span>
                    <a href="#9f978d07-0378-4d8e-a04c-58873e880e54" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <div class="note_ai_generated">
<p>When compiling a C# project, whether or not to install the <code>*.pdb</code> (Program Database) files depends on your needs for debugging and diagnostics. Here's a brief overview:</p>
<ol>
<li><p><strong>Purpose of PDB Files</strong>: <code>*.pdb</code> files contain debugging information for your compiled code, including the names of the variables, method names, and line numbers. They are crucial for debugging because they allow you to step through the code at a source level in a debugger.</p>
</li>
<li><p><strong>For Development</strong>: During the development phase, it's essential to have <code>*.pdb</code> files available. They allow you to debug your code effectively in development environments like Visual Studio.</p>
</li>
<li><p><strong>For Production</strong>: In a production environment, the decision is less straightforward. Including <code>*.pdb</code> files in production can help with post-mortem debugging (diagnosing issues after they've occurred). However, there are some considerations:</p>
<ul>
<li><strong>Security</strong>: <code>*.pdb</code> files can expose detailed inner workings of your code, which might be a concern for proprietary software.</li>
<li><strong>Performance</strong>: There's a small performance overhead when loading <code>*.pdb</code> files, but it's usually negligible.</li>
<li><strong>Size</strong>: <code>*.pdb</code> files can be quite large, increasing the size of your deployment.</li>
</ul>
</li>
<li><p><strong>Symbol Servers</strong>: For production environments, you might consider using a symbol server. This way, <code>*.pdb</code> files are not deployed with your application but can be accessed by developers when needed for debugging.</p>
</li>
<li><p><strong>Release Builds</strong>: In release builds, you can still generate <code>*.pdb</code> files but configure your project to omit or reduce the amount of debugging information included.</p>
</li>
<li><p><strong>Error Logging and Reporting Tools</strong>: If you use error reporting tools, having <code>*.pdb</code> files can enhance the information these tools provide about exceptions and software crashes.</p>
</li>
</ol>
<p>In summary, always use <code>*.pdb</code> files during development. For production, weigh the benefits of improved diagnostics against potential concerns like security and deployment size. If debugging in production is a requirement, consider using a symbol server or selectively including <code>*.pdb</code> files with reduced debugging information.</p>
                            </div>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">いろいろなアプリのバイナリーを見ていて入っているのを見たことがない気がするので自分も消した。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="db4caa50-8c5d-4f17-a34e-d6de099e94be" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">既存の全てのレポジトリーの状態をチェック</span>
                    <a href="#db4caa50-8c5d-4f17-a34e-d6de099e94be" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">大昔のコードが自分には今もとても便利というのがいくつかあるが、データの読み書きがライブラリー化されていないとか、そもそも長く使うつもりがなくて設計を考えずいきなりコードを書いたとかのものがほとんどで、今後もメンテして他者に使ってもらう気持ちは全くない。</p>
                            <p class="note_contents">そういったものについては README.md をつくらない。井ノ口が GitHub をやっていると知って見に来てくれた人がそういったコードを見て「うわっ！」と思うのを避けたく一言くらいは、ということも考えたが、今はクオリティーよりクオンティティーの段階だ。</p>
                            <p class="note_contents">全体的に見て、すでに捨てているプロジェクトについては、直しておかないと自分が困りうることだけ直す。まだ現行のプロジェクトについては、srcZip の設定ファイルを入れ、README.md もガイドライン通りに簡単につくり、アーカイブまでをやっておく。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="2afdd7a4-8cb0-4f4f-8ca3-c17c37bd1f61" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">現行の全てのレポジトリーに README.md を入れる</span>
                    <a href="#2afdd7a4-8cb0-4f4f-8ca3-c17c37bd1f61" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="7d5a218f-46a4-4bec-bc90-3b499646e31e" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">Resources/Documents の文書のアーカイブをやめる</span>
                    <a href="#7d5a218f-46a4-4bec-bc90-3b499646e31e" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">元々は各ファイルに最終更新日とバージョン番号を入れて、ソースコードと同様のフォーマットのファイル名で ZIP ファイルを作成していた。</p>
                            <p class="note_contents">しかし、文章はコードと違ってテストができず、通読して大丈夫でも翌朝読むと内容にミスがあるとか、書いていたときには脳内で補間していたようである主語の欠如により AI による英語訳の方が迷っているとかがたびたびある。よって、確定に至るまでのプロセスがグダグダになりやすい。</p>
                            <p class="note_contents">そういったものにバージョン番号をつけてアーカイブに入れていくのでは、読み返すたびにバージョンが上がる。コーディングのガイドラインについても、v0.1 を作ってから一度は v0.1 のまま内容を差し替え、またミスが見つかっては、また v0.1 で作って差し替えるのかと迷った。</p>
                            <p class="note_contents">内容に変更がなく、ただのミスの修正ならバージョン番号を変更せず、内容に変更があったときだけバージョン番号を変更するというのをルール化することも可能だが、それをやると、同じバージョン番号なのにファイルが一致しない問題が生じる。かといって、誤字・脱字を修正した程度で、ゆくゆく「この文書は最新版でない」と表示するのも問題だ。</p>
                            <p class="note_contents">それなら内容を変更したならメジャー番号を……といったことも思ったが、そういうのは過剰管理であり、やっている側が沼にハマる。</p>
                            <p class="note_contents">「文書なんてちょくちょく更新するものなので、バージョン番号をつけるほどでない」「いつのものかは、どうしても知りたい人は Git のログで分かる」「Git を見てもらえれば、いつも最新版を見てもらえる」といった割り切りにより、バージョン番号をつけたりアーカイブしたりすること自体をやめる。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="6fe73afa-4cc7-46bc-b6be-9e4ae22bc271" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">それぞれのレポジトリーのライセンスについて再考</span>
                    <a href="#6fe73afa-4cc7-46bc-b6be-9e4ae22bc271" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">だいぶ前、何も考えずに決めた。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <div class="note_ai_generated">
<p>GitHub supports several licenses for software projects, which allows creators to specify how their work can be used by others. Some of the most common licenses prepared and available for selection on GitHub include:</p>
<ol>
<li><p><strong>MIT License</strong>: A permissive license that is short and to the point. It lets people do anything they want with your code as long as they provide attribution back to you and don’t hold you liable.</p>
</li>
<li><p><strong>Apache License 2.0</strong>: Also a permissive license, but it also provides an express grant of patent rights from contributors to users.</p>
</li>
<li><p><strong>GNU General Public License (GPL)</strong>: A copyleft license that requires anyone who distributes your code or a derivative work to make the source available under the same terms. Versions 2 and 3 of the GPL are different licenses and are not compatible with each other.</p>
</li>
<li><p><strong>GNU Affero General Public License (AGPL)</strong>: Similar to the GPL, but also covers software that runs over a network and requires anyone who modifies and uses it to provide source access to the modified software over the network.</p>
</li>
<li><p><strong>GNU Lesser General Public License (LGPL)</strong>: A more permissive version of the GPL, used primarily for software libraries. It allows you to link to libraries without applying the GPL terms to your own software, unlike the GPL.</p>
</li>
<li><p><strong>BSD Licenses</strong>: There are different variations, such as the 2-clause and 3-clause licenses. They are permissive licenses with minimal requirements about how the software can be redistributed.</p>
</li>
<li><p><strong>Creative Commons Licenses</strong>: While not typically used for software, Creative Commons licenses are available for other types of creative work like documentation, images, and videos. The most commonly used for documentation is CC-BY, which requires attribution.</p>
</li>
<li><p><strong>Mozilla Public License 2.0</strong>: A weak copyleft license that allows you to mix the licensed code with proprietary code in a larger project. The MPL requires that modifications to the licensed code be made available under the MPL.</p>
</li>
</ol>
<p>When creating a new repository, GitHub offers a feature to automatically include a license file from a template based on these and other licenses. This helps ensure that creators can easily apply the legal terms they wish to govern their work. It's essential to understand the implications of each license type, as they can significantly affect how your software can be used, modified, and distributed.</p>
                            </div>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <div class="note_ai_generated">
<p>The GNU General Public License version 3 (GPL-3.0) is a free, copyleft license for software and other kinds of works, published by the Free Software Foundation (FSF). The GPL-3.0 is designed to ensure that the software remains free and open, meaning that anyone who receives a copy of the software has the freedom to use, study, share, and modify it.</p>
<p>Key features and requirements of the GPL-3.0 include:</p>
<ol>
<li><p><strong>Copyleft</strong>: This means that any derivative work of software licensed under GPL-3.0 must also be released under the GPL-3.0 when distributed. This ensures that all modifications and extensions remain open and free.</p>
</li>
<li><p><strong>Source Code Availability</strong>: When distributing a program licensed under GPL-3.0, you must make the source code available to the users of the program. If you distribute binaries or object code, you must also provide access to the source code.</p>
</li>
<li><p><strong>Patent Licenses</strong>: GPL-3.0 includes an express grant of patent rights from contributors to users, meaning that if a contributor holds patents related to the contributed software, they cannot sue the software's users for patent infringement.</p>
</li>
<li><p><strong>Tivoization</strong>: GPL-3.0 includes terms to combat &quot;Tivoization&quot;, a practice where manufacturers use GPL-licensed software in their devices but use hardware restrictions to prevent users from modifying the software. GPL-3.0 requires that if you distribute the software in a consumer product, you must also provide a way for the user to install modified versions of the software.</p>
</li>
<li><p><strong>Compatibility with Additional Terms</strong>: GPL-3.0 allows for certain additional terms to be added, provided they don't contradict the license's terms. This provides some flexibility for integrating GPL-3.0-licensed software with other software.</p>
</li>
<li><p><strong>International Use</strong>: The license includes provisions to make it more compatible with other jurisdictions and legal systems around the world, addressing some criticisms of earlier GPL versions.</p>
</li>
<li><p><strong>Anti-DRM</strong>: GPL-3.0 includes clauses that prevent the use of the licensed software in digital rights management (DRM) mechanisms that restrict the user's access to the software or to the content accessed through the software.</p>
</li>
</ol>
<p>The GPL-3.0 is often chosen for projects where the developers want to ensure that all versions of the software, even those in the future or those that have been modified, remain free for all users. This license is particularly popular among open-source projects that value community contributions and the free distribution of software.</p>
                            </div>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">すでに選んでいる GPL-3 のままでよさそう。自分のショボいコードを製品に組み込んで販売する人はいないだろうが、これから頑張って開発していくなら、それを使ってくれる人が万が一にもいる場合、その人がどう使ってくれているのかくらいは知りたい。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="40685fe3-bec8-4618-b1b6-e1e212e76517" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">コーディングのガイドラインを再チェック</span>
                    <a href="#40685fe3-bec8-4618-b1b6-e1e212e76517" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ワークフローが定かでなかった頃にグダグダな編集を行った。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">まず主語などで AI 翻訳が迷わないものをつくってから、せめてチャプター単位くらいでまとめて翻訳。段落ごとにいじりすぎると前後と不整合になりうる。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="73a52ff3-539b-43ef-a19f-7d61e5acd075" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">Resources/Documents ディレクトリー内の階層構造をなくす</span>
                    <a href="#73a52ff3-539b-43ef-a19f-7d61e5acd075" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ログファイルにもアーカイブにも階層構造をつくりたくなってきたが、静的なファイルをむやみに動かしてはならない。レポジトリーの URL と同様、識別子が一意なら単一ディレクトリー内でワサワサしてくるのは問題でない。どうしてもグループ分けしたいなら目次のページをつくればよい。各ページが最上位のところにフラットに置かれるのは、Wikipedia の仕様でもある。</p>
                            <p class="note_contents">General と Projects というサブディレクトリーくらいなら……ということも思ったが、いったんフラットを否定すれば、ファイルの不可逆的増加により、もっと良い階層構造をいずれ必ず思いつく。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">各プロジェクトの README.md の更新が必要になるので、またしても、コードに変化のないアーカイブをつくることになる。</p>
                            <p class="note_contents">といったことを今後は避けるためにも、早めにフラットにしておく。「Wikipedia もそうだ」と言えるので、その後は揺るがない。</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>
