<!DOCTYPE html>
<html>
    <head>
        <title>vsTemp</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <style>@import url('https://fonts.googleapis.com/css2?family=M+PLUS+1&family=M+PLUS+1+Code&display=swap');body{margin:0;background-color:#111;color:#ddd;font-family:'M PLUS 1',sans-serif;font-size:1rem;line-height:1.5;overflow-wrap:break-word;word-wrap:break-word}a{color:#69c;text-decoration:underline}a:hover,a:active,a:focus{font-weight:bold}div.task,div.note,div.file,div.image{margin:10px;border:1px solid transparent}div.entries>div.note{border:1px solid #333}div.title{background-color:#333;padding:20px 30px;font-size:2rem;font-weight:bold}@media(width< 576px){div.title{padding:15px 22.5px;font-size:1.5rem;}}a.title{color:#ddd;text-decoration:none}a.title:hover,a.title:active,a.title:focus{text-decoration:underline}div.done{background-color:#115}div.done:hover{background-color:#337}div.canceled{background-color:#511}div.canceled:hover{background-color:#733}div.task_contents{margin:10px 15px}span.task_contents{font-weight:bold}a.permalink{visibility:hidden}div.task:hover a.permalink{visibility:visible}div.note{background-color:#111}p.note_contents{margin:15px 20px}div.file{background-color:#111;padding:15px 20px}div.image{background-color:#111;padding:10px}img.image{box-sizing:border-box;vertical-align:top;max-width:100%}div.note_ai_generated{margin:10px;border:1px solid transparent;background-color:#333}div.note_ai_generated>*{margin:15px 20px}pre{background-color:#555;padding:15px 20px;white-space:pre-wrap}code{font-family:'M PLUS 1 Code',monospace;font-size:1rem;line-height:1.5}</style>
    </head>
    <body>
        <div class="title">
            <a href="vsTemp.htm" class="title">vsTemp</a>
        </div>
        <div class="entries">
            <div id="17a95995-ab9b-4deb-94e1-0ac45d99b23c" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">名前を決める</span>
                    <a href="#17a95995-ab9b-4deb-94e1-0ac45d99b23c" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ネットを見ていると、テンプレートのコードをコマンドラインで出力する例をよく目にする。Visual Studio によるものと違いがあるのか関心がある。</p>
                            <p class="note_contents">また、Visual Studio によるときも、オプションがいろいろある。どこが異なるのか差分を取れると便利。</p>
                            <p class="note_contents">コマンドラインによるコードも入れるが、自分のイメージとしては Visual Studio なので、こういう名前に。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="fb7ffd93-6a76-435c-b837-10efd8f39566" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">レポジトリーを作成</span>
                    <a href="#fb7ffd93-6a76-435c-b837-10efd8f39566" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="31d89d7b-51d1-4d25-98c5-be8050494111" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">レポジトリーをクローン</span>
                    <a href="#31d89d7b-51d1-4d25-98c5-be8050494111" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="4e85afba-9b61-40df-9db1-35c453e84c7f" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">.gitignore を作る</span>
                    <a href="#4e85afba-9b61-40df-9db1-35c453e84c7f" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="a82219fd-acb5-4927-827e-7d378217a793" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">.git ディレクトリーなどを非表示にする</span>
                    <a href="#a82219fd-acb5-4927-827e-7d378217a793" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="28637269-fea3-4694-8f3f-7c5aa894290c" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">taskKiller のログが出力されるように設定</span>
                    <a href="#28637269-fea3-4694-8f3f-7c5aa894290c" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="e7079162-c4a2-4d36-b482-ec51601f6cfe" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">ソリューションを作成</span>
                    <a href="#e7079162-c4a2-4d36-b482-ec51601f6cfe" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="f59dc202-2f29-49b7-9e54-eaad9ddfa931" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents"><a href="https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-new" target="_blank" class="url">https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-new</a> をチェック</span>
                    <a href="#f59dc202-2f29-49b7-9e54-eaad9ddfa931" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="cf618034-0318-4d88-aa12-065c93e1d2a6" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">console を出力</span>
                    <a href="#cf618034-0318-4d88-aa12-065c93e1d2a6" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="06e16edc-d533-49a2-8929-0a3b9afbf753" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">classlib を出力</span>
                    <a href="#06e16edc-d533-49a2-8929-0a3b9afbf753" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="82886313-fa79-4b16-b0b7-719dc6b66a26" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">wpf を出力</span>
                    <a href="#82886313-fa79-4b16-b0b7-719dc6b66a26" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="631b326b-6a9b-450d-8c38-6ad2713b10ad" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">blazorserver を出力</span>
                    <a href="#631b326b-6a9b-450d-8c38-6ad2713b10ad" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="0a69e5f4-d696-427c-b8ae-2741c48a5565" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">blazorwasm を出力</span>
                    <a href="#0a69e5f4-d696-427c-b8ae-2741c48a5565" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="1e279943-250c-46a9-a14c-374fd4e5fd7d" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">mvc, webapp を出力</span>
                    <a href="#1e279943-250c-46a9-a14c-374fd4e5fd7d" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents"><a href="https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-new-sdk-templates#web-options" target="_blank" class="url">https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-new-sdk-templates#web-options</a></p>
                            <p class="note_contents">ドキュメントで二つセットになっていた。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="5bd76ce3-7c9b-46b9-9c45-b435e9bdbc7b" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">razor を出力</span>
                    <a href="#5bd76ce3-7c9b-46b9-9c45-b435e9bdbc7b" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">webapp と同義のようだ。razor にしたほうが分かりやすいかもしれないが、ドキュメントに含まれるほうを採用。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="2b838eac-54e2-4948-8eda-c64c5c968787" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">webapp を razor に変更</span>
                    <a href="#2b838eac-54e2-4948-8eda-c64c5c968787" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">razorclasslib もあるので。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="2e96bbf6-8da2-4ec0-af5e-dc1fce10f58f" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">angular を出力</span>
                    <a href="#2e96bbf6-8da2-4ec0-af5e-dc1fce10f58f" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="4265ddba-00ee-467b-9340-b5f7d9268639" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">react を出力</span>
                    <a href="#4265ddba-00ee-467b-9340-b5f7d9268639" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="1be701ac-c54f-474e-bdc5-52a56542253a" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">razorclasslib を出力</span>
                    <a href="#1be701ac-c54f-474e-bdc5-52a56542253a" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="5e2544a2-76fa-49d0-8a11-6150fa445a27" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">webapi を出力</span>
                    <a href="#5e2544a2-76fa-49d0-8a11-6150fa445a27" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="20f30a2a-d696-4b68-b7c9-4476c018ca21" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">_none をなくす</span>
                    <a href="#20f30a2a-d696-4b68-b7c9-4476c018ca21" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="e57b3f44-089c-43e5-b2c2-8468e221f3bd" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">ほとんど差分のないバージョンを消す</span>
                    <a href="#e57b3f44-089c-43e5-b2c2-8468e221f3bd" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="ec0678eb-34ab-4e92-b2ba-2c25831f40c3" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">出力を忘れているものを探す</span>
                    <a href="#ec0678eb-34ab-4e92-b2ba-2c25831f40c3" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="032b4337-b8e9-4dbc-8ab0-523955a867a5" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents"><a href="https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-new-sdk-templates" target="_blank" class="url">https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-new-sdk-templates</a> をチェック</span>
                    <a href="#032b4337-b8e9-4dbc-8ab0-523955a867a5" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="3616cc68-f80d-4e43-98c4-b57565046135" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents"><a href="https://github.com/dotnet/templating" target="_blank" class="url">https://github.com/dotnet/templating</a> をチェック</span>
                    <a href="#3616cc68-f80d-4e43-98c4-b57565046135" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="c059822b-1326-4b6e-9a4b-f3ecbccce005" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">VS のインストーラーで MAUI のところをチェック</span>
                    <a href="#c059822b-1326-4b6e-9a4b-f3ecbccce005" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">dotnet workload install maui の実行後もチェックボックスがオフだったので、オンにしてインストール。オプションをさわらず。</p>
                            <p class="note_contents">インストール前には 6.6 GB 必要と表示されたが、インストール中には 1.92 GB のうち……の表示に。コマンドラインで入れた SDK がスキップされたか。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="1dab13bf-e316-440e-acf6-891f83d57593" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">.NET MAUI のテンプレを出力できるようにする</span>
                    <a href="#1dab13bf-e316-440e-acf6-891f83d57593" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">dotnet workload list を実行。</p>
                            <p class="note_contents">何もインストールされていないようだった。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">dotnet workload search を実行。</p>
                            <p class="note_contents">ワークロード ID 説明<br />
                                -----------------------------------------------------------------------------------<br />
                                android .NET SDK Workload for building Android applications.<br />
                                ios .NET SDK Workload for building iOS applications.<br />
                                maccatalyst .NET SDK Workload for building MacCatalyst applications.<br />
                                macos .NET SDK Workload for building macOS applications.<br />
                                maui .NET MAUI SDK for all platforms<br />
                                maui-android .NET MAUI SDK for Android<br />
                                maui-desktop .NET MAUI SDK for Desktop<br />
                                maui-ios .NET MAUI SDK for iOS<br />
                                maui-maccatalyst .NET MAUI SDK for Mac Catalyst<br />
                                maui-mobile .NET MAUI SDK for Mobile<br />
                                maui-tizen .NET MAUI SDK for Tizen<br />
                                maui-windows .NET MAUI SDK for Windows<br />
                                runtimes-windows workloads/runtimes-windows/description<br />
                                runtimes-windows-net6 workloads/runtimes-windows-net6/description<br />
                                tvos .NET SDK Workload for building tvOS applications.<br />
                                wasm-experimental workloads/wasm-experimental/description<br />
                                wasm-tools .NET WebAssembly ビルド ツール<br />
                                wasm-tools-net6 .NET WebAssembly ビルド ツール</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">dotnet workload install maui を実行。</p>
                            <p class="note_contents">コンピューターの再起動が保留中です。インストールは続行されますが、再起動が必要になる場合があります。<br />
                                Downloading microsoft.net.sdk.ios.manifest-7.0.100.msi.x64 (16.4.7099)<br />
                                2d1ac66ab9b71a51f302ab0a919f9186-x64.msi をインストールしています ..... Done<br />
                                Downloading microsoft.net.sdk.maccatalyst.manifest-7.0.100.msi.x64 (16.4.7099)<br />
                                e02a42ce4092d4c311de8d5d67920ca4-x64.msi をインストールしています ..... Done<br />
                                Downloading microsoft.net.sdk.macos.manifest-7.0.100.msi.x64 (13.3.7099)<br />
                                1db311fad57809041ce351b3a32cb11d-x64.msi をインストールしています ..... Done<br />
                                Downloading microsoft.net.sdk.tvos.manifest-7.0.100.msi.x64 (16.4.7099)<br />
                                2b6c843aa105f1d1b5f292be3f2ee9cc-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.Maui.Core.Ref.android.Msi.x64 (7.0.92)<br />
                                f6d663daa9ab855937dddc6c9e358281-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Core.Runtime.android.Msi.x64 (7.0.92)<br />
                                18f7d42510bac21585a03d8c44210d93-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Controls.Ref.android.Msi.x64 (7.0.92)<br />
                                40bfa519b42cb20c2d85f744bf7584ae-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Controls.Runtime.android.Msi.x64 (7.0.92)<br />
                                9eb5228f08995c63f451264f3cc87d5b-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Essentials.Ref.android.Msi.x64 (7.0.92)<br />
                                69e28a1a5033b97fc2be75269e28b4a6-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Essentials.Runtime.android.Msi.x64 (7.0.92)<br />
                                9614797fa13fe851c590dce4bc567502-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.AspNetCore.Components.WebView.Maui.Msi.x64 (7.0.92)<br />
                                03d9c591fa13c5c59862aab63d6c0b65-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Sdk.Msi.x64 (7.0.92)<br />
                                d90e10c4bdcc3155f79e4bb623408cf6-x64.msi をインストールしています ...... Done<br />
                                Downloading Microsoft.Maui.Sdk.Msi.x64 (6.0.553)<br />
                                630f8e5b4f6499b88daba5361e09d241-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.Maui.Graphics.Msi.x64 (7.0.92)<br />
                                710a4dae1de40463cbe4d96682dcc6e6-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.Maui.Resizetizer.Sdk.Msi.x64 (7.0.92)<br />
                                ce2a93970cc08c1795140c8b16a3a80f-x64.msi をインストールしています ....... Done<br />
                                Downloading Microsoft.Maui.Templates.net7.Msi.x64 (7.0.92)<br />
                                531a461c7a5897341625a7f28b415cac-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Templates.net6.Msi.x64 (6.0.553)<br />
                                2111ab503046c15a13dfdba0c01f4490-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Core.Ref.any.Msi.x64 (7.0.92)<br />
                                f011c1401923c190dd118bf1ebd35de1-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Core.Runtime.any.Msi.x64 (7.0.92)<br />
                                b2f8d351f0a3ca55abd8a0d0d8192bd0-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Controls.Ref.any.Msi.x64 (7.0.92)<br />
                                c315c5a710eb2ed2b6466f9fc57ea253-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Controls.Runtime.any.Msi.x64 (7.0.92)<br />
                                dc98c8d6b6ccd3819a97e641d7c00f97-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Essentials.Ref.any.Msi.x64 (7.0.92)<br />
                                cc1cb0b0e0580639905c64b9c2c73075-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Essentials.Runtime.any.Msi.x64 (7.0.92)<br />
                                895b1a4c3604c2bdfff03ee1fc63bd9d-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.Android.Sdk.Windows.Msi.x64 (33.0.68)<br />
                                30d913f85221ce25e783732a0f30304d-x64.msi をインストールしています ................. Done<br />
                                Downloading Microsoft.Android.Sdk.Windows.Msi.x64 (32.0.509)<br />
                                bd369cda6d2f3b516095b1b10fbe87fd-x64.msi をインストールしています ............... Done<br />
                                Downloading Microsoft.Android.Ref.33.Msi.x64 (33.0.68)<br />
                                88c2f43f84808a47f9ce4414b0e7fc6b-x64.msi をインストールしています ....... Done<br />
                                Downloading Microsoft.Android.Runtime.33.android-arm.Msi.x64 (33.0.68)<br />
                                e04fa40da708592040dddfee16d5985c-x64.msi をインストールしています ...... Done<br />
                                Downloading Microsoft.Android.Runtime.33.android-arm64.Msi.x64 (33.0.68)<br />
                                822e11b13339a2da72fe675621077d97-x64.msi をインストールしています ...... Done<br />
                                Downloading Microsoft.Android.Runtime.33.android-x86.Msi.x64 (33.0.68)<br />
                                5ab5bdf0f540adfab250491f765dae1b-x64.msi をインストールしています ...... Done<br />
                                Downloading Microsoft.Android.Runtime.33.android-x64.Msi.x64 (33.0.68)<br />
                                d2f1e895594872ebb76df83141bf39a7-x64.msi をインストールしています ...... Done<br />
                                Downloading Microsoft.Android.Templates.Msi.x64 (33.0.68)<br />
                                ce1dcd5c53afeb5aca397cc64c5b7043-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.android-arm.Msi.x64 (6.0.22)<br />
                                Microsoft.Mono.android-arm.6.0.22-x64.msi をインストールしています ......... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.android-arm64.Msi.x64 (6.0.22)<br />
                                Microsoft.Mono.android-arm64.6.0.22-x64.msi をインストールしています .......... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.android-x64.Msi.x64 (6.0.22)<br />
                                Microsoft.Mono.android-x64.6.0.22-x64.msi をインストールしています ......... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.android-x86.Msi.x64 (6.0.22)<br />
                                Microsoft.Mono.android-x86.6.0.22-x64.msi をインストールしています ......... Done<br />
                                Downloading Microsoft.NET.Runtime.MonoAOTCompiler.Task.Msi.x64 (6.0.22)<br />
                                Microsoft.MonoAOTCompiler.Task.6.0.22-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.NET.Runtime.MonoTargets.Sdk.Msi.x64 (6.0.22)<br />
                                Microsoft.MonoTargets.Sdk.6.0.22-x64.msi をインストールしています ...... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-x86.Msi.x64 (6.0.22)<br />
                                Microsoft.AOT.win-x64.Cross.android-x86.6.0.22-x64.msi をインストールしています ....... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-x64.Msi.x64 (6.0.22)<br />
                                Microsoft.AOT.win-x64.Cross.android-x64.6.0.22-x64.msi をインストールしています ....... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-arm.Msi.x64 (6.0.22)<br />
                                Microsoft.AOT.win-x64.Cross.android-arm.6.0.22-x64.msi をインストールしています ....... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-arm64.Msi.x64 (6.0.22)<br />
                                Microsoft.AOT.win-x64.Cross.android-arm64.6.0.22-x64.msi をインストールしています ........ Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.android-arm.Msi.x64 (7.0.11)<br />
                                Microsoft.Mono.android-arm.7.0.11-x64.msi をインストールしています .......... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.android-arm64.Msi.x64 (7.0.11)<br />
                                Microsoft.Mono.android-arm64.7.0.11-x64.msi をインストールしています ............. Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.android-x64.Msi.x64 (7.0.11)<br />
                                Microsoft.Mono.android-x64.7.0.11-x64.msi をインストールしています ........... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.android-x86.Msi.x64 (7.0.11)<br />
                                Microsoft.Mono.android-x86.7.0.11-x64.msi をインストールしています .......... Done<br />
                                Downloading Microsoft.NET.Runtime.MonoAOTCompiler.Task.Msi.x64 (7.0.11)<br />
                                Microsoft.MonoAOTCompiler.Task.7.0.11-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.NET.Runtime.MonoTargets.Sdk.Msi.x64 (7.0.11)<br />
                                Microsoft.MonoTargets.Sdk.7.0.11-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-x86.Msi.x64 (7.0.11)<br />
                                Microsoft.AOT.win-x64.Cross.android-x86.7.0.11-x64.msi をインストールしています ....... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-x64.Msi.x64 (7.0.11)<br />
                                Microsoft.AOT.win-x64.Cross.android-x64.7.0.11-x64.msi をインストールしています ......... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-arm.Msi.x64 (7.0.11)<br />
                                Microsoft.AOT.win-x64.Cross.android-arm.7.0.11-x64.msi をインストールしています ........ Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.AOT.win-x64.Cross.android-arm64.Msi.x64 (7.0.11)<br />
                                Microsoft.AOT.win-x64.Cross.android-arm64.7.0.11-x64.msi をインストールしています ....... Done<br />
                                Downloading Microsoft.Maui.Core.Ref.ios.Msi.x64 (7.0.92)<br />
                                d90daacb6ab8916cdc9c9ff160536efa-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Core.Runtime.ios.Msi.x64 (7.0.92)<br />
                                b74d5b8f0e3cbc840e7cb17b0a8bea09-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.Maui.Controls.Ref.ios.Msi.x64 (7.0.92)<br />
                                0a01ea0345be65de8c108f86a2593ff5-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Controls.Runtime.ios.Msi.x64 (7.0.92)<br />
                                6d174bbf2642b7f59b9f950df7bb3d8b-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Essentials.Ref.ios.Msi.x64 (7.0.92)<br />
                                20227e8586325bd798c25510fb866047-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Essentials.Runtime.ios.Msi.x64 (7.0.92)<br />
                                0ffe514ab390052d9bb77fe9fddebdef-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.iOS.Sdk.Msi.x64 (16.4.7099)<br />
                                6803105f86f2cca7edab2739e31defdf-x64.msi をインストールしています ....... Done<br />
                                Downloading Microsoft.iOS.Sdk.Msi.x64 (16.4.60)<br />
                                514bc49017b58ffcaad5b810f09448cf-x64.msi をインストールしています ........ Done<br />
                                Downloading Microsoft.iOS.Windows.Sdk.Msi.x64 (16.4.7099)<br />
                                72a7b3ee45f02c1ebb29c63367eeeee9-x64.msi をインストールしています .......... Done<br />
                                Downloading Microsoft.iOS.Windows.Sdk.Msi.x64 (16.4.60)<br />
                                a1187a081a41b7dd6be2bd5d7031fea8-x64.msi をインストールしています ........... Done<br />
                                Downloading Microsoft.iOS.Ref.Msi.x64 (16.4.7099)<br />
                                38fe51b62386735bb8c95d0bd918f965-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.iOS.Runtime.ios-arm.Msi.x64 (16.4.7099)<br />
                                cda3be23b4c9978c41fcccbf2c60473d-x64.msi をインストールしています ...... Done<br />
                                Downloading Microsoft.iOS.Runtime.iossimulator-x86.Msi.x64 (16.4.7099)<br />
                                d063a3f69126f0b1b60abf2cc39eda8c-x64.msi をインストールしています ...... Done<br />
                                Downloading Microsoft.iOS.Runtime.ios-arm64.Msi.x64 (16.4.7099)<br />
                                91ddbef242d7a3a419daae082f4e1c53-x64.msi をインストールしています ....... Done<br />
                                Downloading Microsoft.iOS.Runtime.iossimulator-x64.Msi.x64 (16.4.7099)<br />
                                688c8aaee473680b72f323c7b19f9067-x64.msi をインストールしています ...... Done<br />
                                Downloading Microsoft.iOS.Runtime.iossimulator-arm64.Msi.x64 (16.4.7099)<br />
                                da1744a1db8f1c9b88cdd47f0ef65f6b-x64.msi をインストールしています ...... Done<br />
                                Downloading Microsoft.iOS.Templates.Msi.x64 (16.4.7099)<br />
                                dd090621a0d786b0b8f811ab0fb07816-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.ios-arm.Msi.x64 (7.0.11)<br />
                                Microsoft.Mono.ios-arm.7.0.11-x64.msi をインストールしています .............. Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.ios-arm64.Msi.x64 (7.0.11)<br />
                                Microsoft.Mono.ios-arm64.7.0.11-x64.msi をインストールしています ............ Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.iossimulator-arm64.Msi.x64 (7.0.11)<br />
                                Microsoft.Mono.iossimulator-arm64.7.0.11-x64.msi をインストールしています ........... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.iossimulator-x64.Msi.x64 (7.0.11)<br />
                                Microsoft.Mono.iossimulator-x64.7.0.11-x64.msi をインストールしています ........... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.iossimulator-x86.Msi.x64 (7.0.11)<br />
                                Microsoft.Mono.iossimulator-x86.7.0.11-x64.msi をインストールしています .......... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.ios-arm.Msi.x64 (6.0.22)<br />
                                Microsoft.Mono.ios-arm.6.0.22-x64.msi をインストールしています .......... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.ios-arm64.Msi.x64 (6.0.22)<br />
                                Microsoft.Mono.ios-arm64.6.0.22-x64.msi をインストールしています .......... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.iossimulator-arm64.Msi.x64 (6.0.22)<br />
                                Microsoft.Mono.iossimulator-arm64.6.0.22-x64.msi をインストールしています .......... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.iossimulator-x64.Msi.x64 (6.0.22)<br />
                                Microsoft.Mono.iossimulator-x64.6.0.22-x64.msi をインストールしています .......... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.iossimulator-x86.Msi.x64 (6.0.22)<br />
                                Microsoft.Mono.iossimulator-x86.6.0.22-x64.msi をインストールしています ......... Done<br />
                                Downloading Microsoft.Maui.Core.Ref.tizen.Msi.x64 (7.0.92)<br />
                                8bfe01017a5d866c66cedecef29cc7c2-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Core.Runtime.tizen.Msi.x64 (7.0.92)<br />
                                f2c841064b2e45725ca3442a68a0cc01-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Controls.Ref.tizen.Msi.x64 (7.0.92)<br />
                                217721a879c3d8a99c5ae0bac3a14d18-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.Maui.Controls.Runtime.tizen.Msi.x64 (7.0.92)<br />
                                de4209d5420e36437290a878880657f4-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Essentials.Ref.tizen.Msi.x64 (7.0.92)<br />
                                1d5dfd18c68904c4348dba2f00ebd982-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Essentials.Runtime.tizen.Msi.x64 (7.0.92)<br />
                                152db142d4be6e37ea1db19e98d5f59f-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.Maui.Core.Ref.maccatalyst.Msi.x64 (7.0.92)<br />
                                c09e20fd9093dfebc94f7c892150aada-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Core.Runtime.maccatalyst.Msi.x64 (7.0.92)<br />
                                2cf94a94e681a6d560093bc56e687ddd-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Controls.Ref.maccatalyst.Msi.x64 (7.0.92)<br />
                                805d63d7925be987c81442de5efa038a-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Controls.Runtime.maccatalyst.Msi.x64 (7.0.92)<br />
                                2ab41faebd8c9fbbc5a7d61426f4130e-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Essentials.Ref.maccatalyst.Msi.x64 (7.0.92)<br />
                                70b58f9b6876e18eb64b8528ac3efee6-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Essentials.Runtime.maccatalyst.Msi.x64 (7.0.92)<br />
                                0c6d21ab9cc7169c63c8acc745f172bb-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.MacCatalyst.Sdk.Msi.x64 (16.4.7099)<br />
                                2bed76dd8542b842cfa9ffb5ac110d5c-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.MacCatalyst.Sdk.Msi.x64 (16.4.60)<br />
                                2e710eebdadf838cbeaa6f533b4542bb-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.MacCatalyst.Ref.Msi.x64 (16.4.7099)<br />
                                64b9e95bd389ec404d5a90994ed8f56b-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.MacCatalyst.Runtime.maccatalyst-x64.Msi.x64 (16.4.7099)<br />
                                f0d869556da17a5fb3449778eb6c04de-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.MacCatalyst.Runtime.maccatalyst-arm64.Msi.x64 (16.4.7099)<br />
                                c745045149195701432f2804458ab35f-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.MacCatalyst.Templates.Msi.x64 (16.4.7099)<br />
                                f230b253db31b3eec36a393506152198-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.maccatalyst-arm64.Msi.x64 (7.0.11)<br />
                                Microsoft.Mono.maccatalyst-arm64.7.0.11-x64.msi をインストールしています .......... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.maccatalyst-x64.Msi.x64 (7.0.11)<br />
                                Microsoft.Mono.maccatalyst-x64.7.0.11-x64.msi をインストールしています ........... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.maccatalyst-arm64.Msi.x64 (6.0.22)<br />
                                Microsoft.Mono.maccatalyst-arm64.6.0.22-x64.msi をインストールしています .......... Done<br />
                                Downloading Microsoft.NETCore.App.Runtime.Mono.maccatalyst-x64.Msi.x64 (6.0.22)<br />
                                Microsoft.Mono.maccatalyst-x64.6.0.22-x64.msi をインストールしています .......... Done<br />
                                Downloading Microsoft.Maui.Core.Ref.win.Msi.x64 (7.0.92)<br />
                                ecf9e9de60046945b72896ca58d00109-x64.msi をインストールしています .... Done<br />
                                Downloading Microsoft.Maui.Core.Runtime.win.Msi.x64 (7.0.92)<br />
                                4d04463eb1e6f4a77ba9edc14fbf4340-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.Maui.Controls.Ref.win.Msi.x64 (7.0.92)<br />
                                2ef6ca17c9c429ad08aa1e5faf801e27-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.Maui.Controls.Runtime.win.Msi.x64 (7.0.92)<br />
                                95ef6674d795e4ca0e4f4b68250aeffd-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.Maui.Essentials.Ref.win.Msi.x64 (7.0.92)<br />
                                685b7be62f59dc584173f3855f27ddd9-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.Maui.Essentials.Runtime.win.Msi.x64 (7.0.92)<br />
                                55336ef247bf0ebf7d5b854f9ab9ab70-x64.msi をインストールしています ..... Done<br />
                                Downloading Microsoft.Maui.Graphics.Win2D.WinUI.Desktop.Msi.x64 (7.0.92)<br />
                                63197282cab7dbf7ccd1545db012f9ec-x64.msi をインストールしています ..... Done</p>
                            <p class="note_contents">ワークロード maui が正常にインストールされました。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">dotnet workload list を再実行。</p>
                            <p class="note_contents">インストール済みワークロードの ID マニフェストのバージョン インストール ソース<br />
                                -------------------------------------------------------<br />
                                maui 7.0.92/7.0.100 SDK 7.0.400</p>
                            <p class="note_contents">`dotnet workload search` を使用して追加ワークロードを検出し、インストールします。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">Build an iOS app on macOS with .NET CLI - .NET MAUI | Microsoft Learn<br />
                                <a href="https://learn.microsoft.com/en-us/dotnet/maui/ios/cli" target="_blank" class="url">https://learn.microsoft.com/en-us/dotnet/maui/ios/cli</a></p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="4d081013-2f40-4f84-acf7-b12cc08351fc" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">全てのプロジェクトをソリューションに追加＋コンパイルしてみる</span>
                    <a href="#4d081013-2f40-4f84-acf7-b12cc08351fc" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">差分を取りやすいように、同じ種類ならプロジェクト名を同じにした。結果として、Visual Studio で同じソリューションに追加できなくなった。さほど問題でない。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="1f65475b-166e-4876-8780-28addfeed6da" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">ディレクトリーを階層構造にする</span>
                    <a href="#1f65475b-166e-4876-8780-28addfeed6da" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="3de2773b-05b6-442d-9049-f19cfce8a3b8" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">dotnet_new.bat を全体的にチェック</span>
                    <a href="#3de2773b-05b6-442d-9049-f19cfce8a3b8" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="8cc60970-1e3a-4194-aa8b-4db2444f453f" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">全てのプロジェクトをソリューションに入れる</span>
                    <a href="#8cc60970-1e3a-4194-aa8b-4db2444f453f" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">やはりやる。そのためにプロジェクト名をディレクトリー名と一致させる。すぐに走らせられることのメリットは大きい。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="4386a7bd-f135-420c-8152-92e18bb193bb" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">全てのファイルをチェック</span>
                    <a href="#4386a7bd-f135-420c-8152-92e18bb193bb" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="0f130369-808d-4b05-93f3-1cb8da15c6a4" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">Node.js をインストール</span>
                    <a href="#0f130369-808d-4b05-93f3-1cb8da15c6a4" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">いくつかのプロジェクトのコンパイルに必要。44のプロジェクトのうち8個で失敗。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">推奨版とされる node-v18.18.0-x64.msi をインストールした。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="c28e86b5-ff48-4a25-bc59-62676374dfb9" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">npm をアップデート</span>
                    <a href="#c28e86b5-ff48-4a25-bc59-62676374dfb9" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">npm notice New major version of npm available! 9.8.1 -&gt; 10.1.0 とのこと。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">npm install -g npm を実行した。</p>
                            <p class="note_contents">node.js - How can I update npm on Windows? - Stack Overflow<br />
                                <a href="https://stackoverflow.com/questions/18412129/how-can-i-update-npm-on-windows" target="_blank" class="url">https://stackoverflow.com/questions/18412129/how-can-i-update-npm-on-windows</a></p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="90320310-5d2f-4d72-87b8-4ea1d3af15d7" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">コンパイル時のログをチェック</span>
                    <a href="#90320310-5d2f-4d72-87b8-4ea1d3af15d7" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="913b8c57-0474-4629-9667-34bfc68fad54" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">全て再生成</span>
                    <a href="#913b8c57-0474-4629-9667-34bfc68fad54" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="e5a8acf8-77e0-45c4-bda8-68e7fcfde153" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">コンパイルしてみる</span>
                    <a href="#e5a8acf8-77e0-45c4-bda8-68e7fcfde153" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">Node.js を入れたり、Android のライセンスについて同意したりで、何度かやるうちに全て成功した。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="f06f1e76-2afe-4337-9989-8349409e2651" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">コミットされないファイルを消すスクリプトを書く</span>
                    <a href="#f06f1e76-2afe-4337-9989-8349409e2651" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">コンパイルに30分ほどかかった。再生成のためにいったん消そうとしたところ、40万近いファイルの削除になった。一時ファイルが多すぎるようだ。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <div class="note_ai_generated">
<p>In PowerShell, you can use the <code>Get-ChildItem</code> cmdlet to search for the directories and the <code>Remove-Item</code> cmdlet to delete them. Below is a PowerShell script that will recursively delete all &quot;bin&quot; and &quot;obj&quot; directories under a specified directory.</p>
<pre><code class="language-Powershell"># Specify the root directory
$rootDirectory = &quot;.&quot;

# Get all 'bin' and 'obj' directories recursively
$directories = Get-ChildItem -Path $rootDirectory -Recurse -Directory -Include bin, obj

# Loop over the directories and remove them
foreach ($dir in $directories) {
    Write-Output &quot;Deleting: $($dir.FullName)&quot;
    Remove-Item -LiteralPath $dir.FullName -Recurse -Force
}

Write-Output &quot;Deletion Complete&quot;
</code></pre>
<h3>Instructions:</h3>
<ol>
<li>Open Notepad or any text editor of your choice.</li>
<li>Copy and paste the above PowerShell script into the editor.</li>
<li>Save the file with a <code>.ps1</code> extension, for example, <code>deleteBinAndObjFolders.ps1</code>.</li>
<li>Open PowerShell and navigate to the location where you saved the script.</li>
<li>Run the script by typing <code>.\deleteBinAndObjFolders.ps1</code> and pressing Enter.</li>
</ol>
<h3>Important Points:</h3>
<ul>
<li>Be cautious while running scripts that delete files and folders, ensure that the directories to be deleted are correct.</li>
<li>PowerShell scripts execution policy: By default, PowerShell has restrictions on executing scripts. You might need to change the execution policy to run the script. You can do this by running <code>Set-ExecutionPolicy RemoteSigned</code> or <code>Set-ExecutionPolicy Unrestricted</code> in a PowerShell window run as Administrator, and selecting <code>Y</code> for Yes when prompted.</li>
<li>Always double-check the <code>$rootDirectory</code> variable and test the script in a safe environment before using it on real data to avoid any accidental loss of important information.</li>
</ul>
                            </div>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <div class="note_ai_generated">
<p>In PowerShell, if you want to pause the execution of the script and wait for the user to acknowledge before proceeding, you can use the <code>Read-Host</code> cmdlet with a prompt string, like so:</p>
<pre><code class="language-powershell">Read-Host &quot;Press Enter to continue&quot;
</code></pre>
<p>This will display the message &quot;Press Enter to continue&quot; and pause the script execution until the user presses the Enter key.</p>
<p>Here is an example with a pause included in a PowerShell script:</p>
<pre><code class="language-powershell">Write-Output &quot;Hello, World!&quot;
Read-Host &quot;Press Enter to continue&quot;
Write-Output &quot;Continuing...&quot;
</code></pre>
<p>In this script, after printing &quot;Hello, World!&quot; to the console, the script will pause and wait for the user to press Enter before printing &quot;Continuing...&quot; and finishing the execution.</p>
                            </div>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <div class="note_ai_generated">
<p>The <code>ClientApp</code> folder is typically seen in projects that use .NET with a web client application, such as an Angular, React, or Vue.js application. Deciding whether to commit this folder to your version control system depends on the specific use case, content of the folder, and your project's needs.</p>
<p>Here’s a general guideline to follow:</p>
<h3>1. <strong>Source Code</strong>:</h3>
<ul>
<li>Any source code, configuration files, and assets essential for building your client application should be committed.</li>
</ul>
<h3>2. <strong>Dependencies</strong>:</h3>
<ul>
<li><strong>Node Modules</strong>: Typically, the <code>node_modules</code> folder, which is generated by npm or yarn and contains package dependencies, should not be committed. Instead, you should commit the <code>package.json</code> and <code>package-lock.json</code> or <code>yarn.lock</code> files, allowing team members or build systems to install dependencies consistently.</li>
<li><strong>.NET Packages</strong>: Similarly, NuGet packages (dependencies for .NET projects) should not be committed. The <code>*.csproj</code> or <code>*.fsproj</code> file containing package references should be sufficient.</li>
</ul>
<h3>3. <strong>Generated Files/Build Artifacts</strong>:</h3>
<ul>
<li>Any file that is generated during the build process (e.g., transpiled JavaScript files, minified CSS) should not be committed.</li>
</ul>
<h3>4. <strong>Environment-Specific Configuration</strong>:</h3>
<ul>
<li>Files containing environment-specific configuration (e.g., database connection strings, API keys) should not be committed. Instead, use environment variables or other configuration mechanisms to manage these securely.</li>
</ul>
<h3>5. <strong>Development Tools and Configuration</strong>:</h3>
<ul>
<li>Files related to linting, formatting, and other development tools and configurations (e.g., <code>.eslintrc</code>, <code>.prettierrc</code>) should be committed.</li>
</ul>
<h3>Example: .gitignore</h3>
<p>If you are using git, you can add entries to the <code>.gitignore</code> file to avoid committing unnecessary files and folders. Here’s an example that ignores <code>node_modules</code>:</p>
<pre><code class="language-plaintext"># Ignore node modules
ClientApp/node_modules/
</code></pre>
<p>Make sure that you test your project's build with a clean checkout from version control to ensure that no necessary files are missing from the repository, and all team members can build the project successfully.</p>
                            </div>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">以下のエラーが生じた。</p>
                            <p class="note_contents">Remove-Item : パス &#39;C:\Repositories\vsTemp\angular\angular_net7_0_individual\ClientApp\node_modules\@angular-devkit\schematics\node_modules&#39; が存在しないため検出できません。<br />
                                発生場所 C:\Repositories\vsTemp\clean.ps1:10 文字:5<br />
                                + Remove-Item -LiteralPath $dir.FullName -Recurse -Force<br />
                                + ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;+ CategoryInfo : ObjectNotFound: (C:\Repositories...cs\node_modules:String) [Remove-Item], ItemNotFoundException<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;+ FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.RemoveItemCommand</p>
                            <p class="note_contents">node_modules ディレクトリー内に node_modules ディレクトリーがあることによる問題。2回目には起こらないので無視。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="b0a135e9-41b9-462e-8bc4-94d252acab03" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">clean.ps1 で .vs が消されるのを確認</span>
                    <a href="#b0a135e9-41b9-462e-8bc4-94d252acab03" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="c6061d4a-c934-4473-a050-0b41fe12cb32" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">各プロジェクトにデフォルトで出力されるファイルをチェック</span>
                    <a href="#c6061d4a-c934-4473-a050-0b41fe12cb32" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">IDE で開いて出力されるものと区別できていなかった。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="9c576a7a-ad7d-4254-9764-bb4d357c4907" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">各プロジェクトの .gitignore をチェック</span>
                    <a href="#9c576a7a-ad7d-4254-9764-bb4d357c4907" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">vsTemp 内のもの。</p>
                            <p class="note_contents">やはり node_modules は除外されている。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="da4e5cc8-b37e-4da3-a88b-77935f06f84c" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">clean.ps1 を再実行＋残るファイルをザッと</span>
                    <a href="#da4e5cc8-b37e-4da3-a88b-77935f06f84c" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ファイルを再生成し、いったん全てのファイルをコミットし、clean.ps1 を実行したところ、それでは差分が全く生じなかった。</p>
                            <p class="note_contents">残るファイルのチェックは、ほかのタスクとして行った。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="cfa17a1d-b557-4b3f-86fe-0a6cb3060ce8" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">「再生成 → clean.ps1 → コンパイル」を試す</span>
                    <a href="#cfa17a1d-b557-4b3f-86fe-0a6cb3060ce8" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">開発用には、Windows 11 と Windows 10 の二つのパソコンがある。</p>
                            <p class="note_contents">11で再生成し、いったん全てコミットし、clean.ps1 を実行し、差分が生じないのを確認した。</p>
                            <p class="note_contents">そこからのコンパイルに、8 GB しかメモリーのない11では30分はかかるので、16 GB ある10での作業に移行した。</p>
                            <p class="note_contents">10にも Node.js など、同じ設定を行い、レポジトリーをチェックアウト。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">10の Visual Studio でソリューションを開いたところ、11と同様、Android のライセンスの同意のダイアログが二度出た。内容は同じだったと思う。それ以外をさわらず、いったん IDE を閉じた。</p>
                            <p class="note_contents">その段階で生じていた差分は14ファイルあり、全てが *.user だった。最終的に残るファイルなので、コミットした。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">それからまた Windows 10 のパソコンでソリューションを開いたところ、CPU の利用率が2/3くらいの状態が1分ほど続いた。そのうち数％まで落ち着き、システム全体としてのメモリー使用量は 8.1 GB と。ここからのコンパイルではやはり Windows 11 のパソコンのメモリー容量を大きく上回る。そちらでは、キャッシュ地獄でコンパイルに30分以上かかった。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">メモリーが倍でもそれなりに時間がかかるようだ。15分が経ち、目視では7割ちょっとくらい。システム全体としては 12.6 GB のメモリーが使用されている。SSD の使用率が10～20％をウロついているので、node_modules が重たい可能性が高い。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">========== ビルド: 成功 44、失敗 0、最新の状態 0、スキップ 0 ==========<br />
                                ========== ビルド は 11:21 に開始され、23:05.522 分 かかりました ==========</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">コンパイルしても、レポジトリーには差分が全く生じなかった。</p>
                            <p class="note_contents">clean.ps1 は、なくなっていても IDE が再生成できるファイルのみ消し、効果的な掃除を行えるということ。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="3755937a-c339-4df9-8793-ce686061f5fb" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">二つのパソコンでレポジトリーのファイルを同期</span>
                    <a href="#3755937a-c339-4df9-8793-ce686061f5fb" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="9bd1ed32-c609-40aa-9291-14f3c8baebf0" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">取り組みの終了時に clean.ps1 を実行</span>
                    <a href="#9bd1ed32-c609-40aa-9291-14f3c8baebf0" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="21b8b1bd-b049-4c6d-9632-1ec3ac64b8a9" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">Docker 関連のテンプレを追加</span>
                    <a href="#21b8b1bd-b049-4c6d-9632-1ec3ac64b8a9" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ASP.NET Core Web アプリ<br />
                                フレームワーク: .NET 7.0<br />
                                認証の種類: 個別のアカウント<br />
                                「HTTPS 用の構成」オンのまま<br />
                                「Docker を有効にする」オン<br />
                                Docker OS: Windows<br />
                                「最上位ステートメントを使用しない」オフのまま</p>
                            <p class="note_contents">のものを、razor_net7_0_individual_docker_vs として作成し、すぐにコミット。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">一つ前の構成のうち Docker がオフのものを生成し、razor_net7_0_individual と比較した。</p>
                            <p class="note_contents">BeyondCompare で「些細な差異を無視」をオンにしての比較では、使うデータベース以外は一致した。使うデータベースは、razor_net7_0_individual では SQLite、新しいほうでは SQL Server だった。</p>
                            <p class="note_contents">それ以外は一致したので、razor_net7_0_individual_docker_vs は、使うデータベースの違いを無視するなら、「Docker 関連のチェックボックスをオンにした場合の差分」を見やすいものと考えられる。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">「些細な差異を無視」の設定が必要なのは、自分は Hoge (...) のように書く癖があり、Visual Studio での生成だと、そう設定されている IDE の影響を受けるため。</p>
                            <p class="note_contents">Visual Studio の設定をいったん初期化することも考えたが、それでサーバーに設定が載ってほかのパソコンも影響を受けて、設定を戻したときにも全ては戻らなくて……のようなことが Visual Studio ではありそう。以前にも設定が飛んだことがある。</p>
                            <p class="note_contents">Hoge (...) のように書くのは、そのほうが見た目が好きだから程度のこと。int hoge,moge とはしないし、hoge=moge?poge:null ともしない。C/C++/C# において、空白は、概ね英文として自然な使われ方。C# も Java も strcmp 的な単語の省略が推奨されず、コードが横に長くなる。そういう時代にメソッド名のうしろの空白のみ省略することもなさそう。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">razor_net7_0_individual_docker_vs と razor_net7_0_individual の差分をチェック。</p>
                            <p class="note_contents">Dockerfile 以外では、前者の launchSettings.json には、</p>
                            <p class="note_contents">&quot;Docker&quot;: {<br />
                                &nbsp;&nbsp;&quot;commandName&quot;: &quot;Docker&quot;,<br />
                                &nbsp;&nbsp;&quot;launchBrowser&quot;: true,<br />
                                &nbsp;&nbsp;&quot;launchUrl&quot;: &quot;{Scheme}://{ServiceHost}:{ServicePort}&quot;,<br />
                                &nbsp;&nbsp;&quot;environmentVariables&quot;: {<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&quot;ASPNETCORE_URLS&quot;: &quot;<a href="https://+:443;http://+:80&quot;" target="_blank" class="url">https://+:443;http://+:80&quot;</a><br />
                                &nbsp;&nbsp;},<br />
                                &nbsp;&nbsp;&quot;publishAllPorts&quot;: true,<br />
                                &nbsp;&nbsp;&quot;useSSL&quot;: true<br />
                                }</p>
                            <p class="note_contents">というのが入る。</p>
                            <p class="note_contents">差分としてはこの程度なので、.NET 6.0 のものを用意しない。また、ASP.NET Core Web アプリ以外のものも不要。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="00cb41af-f3c1-45e6-817c-d19211bbbe33" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">Vue 関連のテンプレを追加</span>
                    <a href="#00cb41af-f3c1-45e6-817c-d19211bbbe33" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">現時点ではコマンドラインのコマンドがないようで、Visual Studio では「プレビュー」となっている。やってみたが、パスが不正だと怒られて失敗した。自動的に API 用のプロジェクトも吐くようで、ほかのプロジェクトに比して、整っている感が乏しい。</p>
                            <p class="note_contents">Vue については単独で学ぶ。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="8b7a20d6-3950-4476-bb1e-da4161293ba1" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">やり忘れていることがないか探す</span>
                    <a href="#8b7a20d6-3950-4476-bb1e-da4161293ba1" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="17716599-d6e4-4737-ad65-c80cc85bd9d8" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">全てのプロジェクトの .gitignore に Thumbs.db を入れる</span>
                    <a href="#17716599-d6e4-4737-ad65-c80cc85bd9d8" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">自分のほかのプロジェクト。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="af9e3848-fca2-4fa3-b063-9772e427279d" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">各プロジェクトの .vs を非表示にする</span>
                    <a href="#af9e3848-fca2-4fa3-b063-9772e427279d" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="eeae1678-678e-4ff8-8f96-0ced965f2092" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">新たに追加したプロジェクトのみコンパイル</span>
                    <a href="#eeae1678-678e-4ff8-8f96-0ced965f2092" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="988f3e93-95a8-404e-85b2-3a4db2d171b5" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">レポジトリーの集まっているところに Thumbs.db の混入がないか調べる</span>
                    <a href="#988f3e93-95a8-404e-85b2-3a4db2d171b5" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">相変わらずヤバい。</p>
                            <div class="note_ai_generated">
<p>Below is a PowerShell script that will search for all <code>thumbs.db</code> files, including hidden ones, in <code>C:\Repositories</code>, asks the user for confirmation to delete them, deletes them if the user agrees, and then waits for any key to be pressed before closing the window.</p>
<pre><code class="language-powershell"># Define the path to search in
$path = &quot;C:\Repositories&quot;

# Search for thumbs.db files including hidden ones
$thumbs = Get-ChildItem -Path $path -Filter thumbs.db -Recurse -Force -ErrorAction SilentlyContinue | Select-Object -ExpandProperty FullName

# Check if any thumbs.db files are found
if ($thumbs.Count -eq 0) {
    Write-Host &quot;No thumbs.db files found.&quot;
} else {
    # List found thumbs.db files
    $thumbs | ForEach-Object { Write-Host $_ }

    # Ask for confirmation to delete
    $confirmation = Read-Host &quot;Do you want to delete all found thumbs.db files? (y/n)&quot;
    if ($confirmation -ieq 'y') {
        $thumbs | ForEach-Object {
            Remove-Item $_ -Force
            Write-Host &quot;Deleted $_&quot;
        }
    } else {
        Write-Host &quot;No files were deleted.&quot;
    }
}

# Wait for any key to be pressed before closing the window
Write-Host &quot;Press any key to exit...&quot;
$null = $host.UI.RawUI.ReadKey(&quot;NoEcho,IncludeKeyDown&quot;)
</code></pre>
<p>Here is a breakdown of the script:</p>
<ol>
<li><p><strong>Defining the Path</strong>: The <code>$path</code> variable is set to the directory <code>C:\Repositories</code>.</p>
</li>
<li><p><strong>Searching for thumbs.db Files</strong>: The <code>Get-ChildItem</code> cmdlet searches for all <code>thumbs.db</code> files in <code>$path</code> and its subdirectories (<code>-Recurse</code>). The <code>-Force</code> parameter includes hidden files in the search, and <code>-ErrorAction SilentlyContinue</code> ignores errors, such as permission denied.</p>
</li>
<li><p><strong>User Confirmation</strong>: If any <code>thumbs.db</code> files are found, the script lists them and asks the user whether to delete them. If the user enters 'y', the script deletes the files, otherwise it does not delete any files.</p>
</li>
<li><p><strong>Wait for Any Key</strong>: Lastly, the script waits for any key to be pressed before closing the window using <code>$host.UI.RawUI.ReadKey(&quot;NoEcho,IncludeKeyDown&quot;)</code>.</p>
</li>
</ol>
<h3>Running the Script</h3>
<p>Save the script in a <code>.ps1</code> file, for example <code>RemoveThumbs.ps1</code>, and run it with PowerShell.</p>
<p>Please note that the script needs to be run with sufficient permissions to read and delete files in <code>C:\Repositories</code>. If you run into permission issues, you may need to run the script as an administrator. Also, please be careful with deleting files and ensure that you have backups if needed, as deleting files can be irreversible.</p>
                            </div>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">Resources\Misc\delete_thumbs_db.ps1 として保存。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="4b9ae8fd-93d6-4b58-a401-c689cb4e9d97" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">node_modules について調べる</span>
                    <a href="#4b9ae8fd-93d6-4b58-a401-c689cb4e9d97" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">「NuGet の packages 的なものだろう」以上の認識がない。そもそも Node.js や npm についても分かっていない。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <div class="note_ai_generated">
<p>In Node.js development, <code>node_modules</code> is a directory that is created when you install Node.js packages (libraries or dependencies) using the Node Package Manager (NPM) or Yarn. It contains the code of the installed packages and their own dependencies.</p>
<h3>Structure:</h3>
<ul>
<li>The <code>node_modules</code> folder is located at the root of your Node.js project.</li>
<li>Each package you install gets its own subdirectory within <code>node_modules</code>.</li>
</ul>
<h3>Installation:</h3>
<p>When you run a command like:</p>
<pre><code class="language-sh">npm install &lt;package-name&gt;
</code></pre>
<p>NPM will download the package and its dependencies and place them in the <code>node_modules</code> folder.</p>
<h3>package.json:</h3>
<p>In a Node.js project, there is typically a <code>package.json</code> file that lists all the dependencies and their version numbers that your project needs. When you run <code>npm install</code> without any argument, NPM will read the <code>package.json</code> file and install all the listed dependencies in the <code>node_modules</code> folder.</p>
<h3>Usage:</h3>
<p>When you require a module in your code using the <code>require</code> function, Node.js will look for the module in the <code>node_modules</code> folder.</p>
<pre><code class="language-javascript">const lodash = require('lodash');
</code></pre>
<h3>Considerations:</h3>
<ul>
<li>The <code>node_modules</code> folder can get very large depending on the number and size of the installed packages.</li>
<li>Typically, it is not included in version control systems like git, and it’s common to add <code>node_modules</code> to the <code>.gitignore</code> file.</li>
<li>When deploying applications or sharing code, you only need to share the <code>package.json</code> and <code>package-lock.json</code> or <code>yarn.lock</code> files. Others can then run <code>npm install</code> or <code>yarn install</code> to recreate the <code>node_modules</code> folder.</li>
</ul>
<h3>Managing node_modules Size:</h3>
<p>Given that <code>node_modules</code> can get quite bulky, developers often use tools and practices to manage its size:</p>
<ul>
<li><strong>Using .npmrc</strong>: Developers can create an <code>.npmrc</code> file to manage the cache and other configurations related to <code>npm</code>.</li>
<li><strong>npm ci</strong>: This command provides a way to ensure that the exact dependency tree specified in <code>package-lock.json</code> is created, offering more reliability in CI/CD environments.</li>
<li><strong>npm prune</strong>: This command removes unnecessary packages from <code>node_modules</code>.</li>
</ul>
<h3>Handling in Deployment:</h3>
<ul>
<li>Some cloud platforms automatically run the <code>npm install</code> command during the deployment process.</li>
<li>In serverless environments or containerized deployments like Docker, managing <code>node_modules</code> efficiently is crucial to optimize build times and resource usage.</li>
</ul>
<p>Keep in mind that practices and tools could have evolved, so it’s advisable to consult the latest Node.js and npm documentation or resources for any advancements or new best practices in managing <code>node_modules</code>.</p>
                            </div>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <div class="note_ai_generated">
<p>Node.js is an open-source, cross-platform, JavaScript runtime environment that allows developers to execute JavaScript code server-side. Traditionally, JavaScript was used mainly for client-side development, but Node.js enables developers to use JavaScript to write server-side code as well.</p>
<h3>Features:</h3>
<ol>
<li><strong>Asynchronous and Event-Driven</strong>: Node.js is designed to be non-blocking and event-driven, meaning it can handle many connections simultaneously, making it suitable for building scalable network applications.</li>
<li><strong>Single-Threaded</strong>: It uses a single-threaded event loop model, with the ability to scale to support thousands of simultaneous connections.</li>
<li><strong>V8 JavaScript Runtime</strong>: It uses the V8 JavaScript engine, developed by Google, to execute code.</li>
<li><strong>NPM</strong>: It includes npm, a package manager that simplifies the process of using and sharing code modules.</li>
<li><strong>Cross-Platform</strong>: It can be run on various platforms like Windows, Mac OS X, and Linux.</li>
</ol>
<h3>Architecture:</h3>
<ul>
<li>Node.js operates on a single-threaded event loop, using non-blocking I/O calls, allowing it to support thousands of concurrent connections without the need for multi-threading or multiple processes, reducing the overhead and complexity.</li>
<li>It uses a callback mechanism to handle asynchronous operations, allowing developers to write non-blocking code.</li>
</ul>
<h3>Use Cases:</h3>
<ul>
<li><strong>Web Servers</strong>: Building fast, scalable network applications like web servers.</li>
<li><strong>Real-Time Applications</strong>: Suitable for developing real-time applications such as chat applications and online gaming.</li>
<li><strong>APIs</strong>: Developing RESTful services and APIs.</li>
<li><strong>Microservices Architecture</strong>: Used for building microservices for scalable and maintainable applications.</li>
<li><strong>IoT Devices</strong>: Ideal for creating lightweight and efficient applications for Internet of Things (IoT) devices.</li>
</ul>
<h3>Example:</h3>
<p>Here's a simple example of a web server created using Node.js:</p>
<pre><code class="language-javascript">const http = require('http');

const server = http.createServer((req, res) =&gt; {
  res.statusCode = 200;
  res.setHeader('Content-Type', 'text/plain');
  res.end('Hello, World!\n');
});

const PORT = 3000;
server.listen(PORT, () =&gt; {
  console.log(`Server running at http://localhost:${PORT}/`);
});
</code></pre>
<h3>Installing Node.js:</h3>
<p>You can download and install Node.js from the <a href="https://nodejs.org/">official website</a>, and it typically comes bundled with npm, the Node package manager.</p>
<h3>Advantages of Node.js:</h3>
<ol>
<li><strong>Speed and Performance</strong>: With the V8 JavaScript Engine and its non-blocking nature, Node.js is fast and can handle many simultaneous connections.</li>
<li><strong>Unified Language Stack</strong>: Allows developers to use JavaScript for both the front-end and back-end, promoting the development efficiency and understanding.</li>
<li><strong>Rich Ecosystem</strong>: The npm registry contains a vast number of libraries and tools available for developers, making it easier to find a package that suits one's needs.</li>
<li><strong>Community and Corporate Support</strong>: It has strong community support and is also backed by large corporations like Microsoft, IBM, and Netflix.</li>
</ol>
<h3>Learning Node.js:</h3>
<p>To learn Node.js, you may consider studying JavaScript first if you aren't already familiar with it, as it is the foundational language for Node.js. Thereafter, explore Node.js documentation, tutorials, and courses available online, which often include hands-on examples and real-world application development scenarios.</p>
<p>Given the rapid evolution of technology, it’s advisable to refer to the latest Node.js documentation and learning resources to get the most accurate and up-to-date information.</p>
                            </div>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <div class="note_ai_generated">
<p><code>npm</code> (Node Package Manager) is an essential tool for Node.js developers. It is both a command-line utility and an online database of public and paid-for private packages (npm registry), which developers use to share and distribute their JavaScript code.</p>
<h3>Core Functions:</h3>
<ol>
<li><strong>Dependency Management</strong>: It allows developers to manage project dependencies and define project metadata.</li>
<li><strong>Package Installation</strong>: It installs project dependencies defined in a <code>package.json</code> file.</li>
<li><strong>Run Scripts</strong>: It allows running scripts defined in the <code>scripts</code> section of <code>package.json</code>.</li>
<li><strong>Publish Packages</strong>: Developers can publish their packages to the npm registry, making them available to the community.</li>
</ol>
<h3>Usage:</h3>
<p>Below are the basics on how to use npm:</p>
<h4>Initializing a New Project:</h4>
<pre><code class="language-sh">npm init
</code></pre>
<p>This command will create a <code>package.json</code> file in your project directory and will ask you a number of questions to help set up your project.</p>
<h4>Installing Packages:</h4>
<pre><code class="language-sh">npm install &lt;package-name&gt;
</code></pre>
<p>This will install a package and add it as a dependency in the <code>package.json</code> file.</p>
<h4>Installing Packages Globally:</h4>
<pre><code class="language-sh">npm install -g &lt;package-name&gt;
</code></pre>
<p>This will install a package globally, making it available to any project.</p>
<h4>Running Scripts:</h4>
<pre><code class="language-sh">npm run &lt;script-name&gt;
</code></pre>
<p>This will run a script defined in the <code>scripts</code> section of your <code>package.json</code> file.</p>
<h4>Updating Packages:</h4>
<pre><code class="language-sh">npm update &lt;package-name&gt;
</code></pre>
<p>This command will update the specified package to the latest version.</p>
<h4>Uninstalling Packages:</h4>
<pre><code class="language-sh">npm uninstall &lt;package-name&gt;
</code></pre>
<p>This will uninstall a package and remove it from the <code>node_modules</code> folder and <code>package.json</code> file.</p>
<h3>Package.json:</h3>
<p>The <code>package.json</code> file is a crucial file in any Node.js project, holding various metadata relevant to the project, including its dependencies, scripts, and configurations.</p>
<p>Example of a <code>package.json</code> file:</p>
<pre><code class="language-json">{
  &quot;name&quot;: &quot;my-app&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;description&quot;: &quot;A sample app&quot;,
  &quot;main&quot;: &quot;index.js&quot;,
  &quot;scripts&quot;: {
    &quot;start&quot;: &quot;node index.js&quot;
  },
  &quot;dependencies&quot;: {
    &quot;express&quot;: &quot;^4.17.1&quot;
  }
}
</code></pre>
<h3>npm Registry:</h3>
<p>The <a href="https://www.npmjs.com/">npm Registry</a> is an online database containing public and paid-for private JavaScript packages available for download and use. It’s a key part of the npm ecosystem, enabling developers to share and reuse code efficiently.</p>
<h3>Concerns and Best Practices:</h3>
<ul>
<li><strong>Security</strong>: It’s crucial to audit and verify packages before using them in projects, as they can contain vulnerabilities. <code>npm</code> provides a command <code>npm audit</code> to scan your project for vulnerabilities.</li>
<li><strong>Package Locking</strong>: <code>package-lock.json</code> or <code>yarn.lock</code> are used to lock the versions of the installed packages, ensuring that every install results in the exact same file structure in <code>node_modules</code>.</li>
<li><strong>Versioning</strong>: Developers should be aware of semantic versioning to manage package versions effectively.</li>
<li><strong>Private Registries and Scopes</strong>: Enterprises often use private npm registries and scopes to manage and distribute their internal packages securely.</li>
</ul>
<p>Given the rapid development of npm and the Node.js ecosystem, always refer to the <a href="https://docs.npmjs.com/">official npm documentation</a> or other up-to-date resources for the most accurate and current information.</p>
                            </div>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ASP.NET Core のウェブアプリに Node.js が使われているなら、C# で自分で書くより初めからこれを使ったほうが良いという JavaScript のライブラリーがすでに存在するからと考えてよさそう。</p>
                            <div class="note_ai_generated">
<p>Yes, that's a reasonable assumption. When a developer uses Node.js in conjunction with an ASP.NET Core Web App, it’s often because they want to leverage the extensive ecosystem of JavaScript libraries and packages available through npm. These packages can offer functionality, efficiency, and performance that might be time-consuming, complex, or even impossible to replicate with C# alone.</p>
<h3>Common Scenarios:</h3>
<ol>
<li><strong>Client-Side Development</strong>: Developers might use Node.js and its packages to manage, build, and bundle client-side resources like JavaScript, CSS, and HTML.</li>
<li><strong>Real-Time Features</strong>: If the ASP.NET Core app requires real-time features, Node.js is often involved because of its capability to handle asynchronous, real-time operations efficiently.</li>
<li><strong>Utilizing Specific Libraries</strong>: Some libraries and frameworks are only available or are more mature and feature-rich in the JavaScript ecosystem, so developers may prefer using them over their C# counterparts.</li>
<li><strong>Isomorphic/Universal JavaScript</strong>: Node.js is used when developers want to render pages on the server-side using the same templates and libraries that are used on the client-side.</li>
</ol>
<h3>Example Usage:</h3>
<p>A common usage of Node.js in an ASP.NET Core app is the utilization of task runners like Gulp or Webpack for building and bundling JavaScript and CSS files. Developers might also use Node.js packages for transpiling code, optimizing images, and performing other tasks that are part of the build process.</p>
<h3>Safety and Efficiency:</h3>
<p>While using JavaScript packages can bring in efficiency and ease of development, it’s crucial to manage them properly to avoid vulnerabilities and maintain the project effectively. Regularly updating the packages, performing security audits using tools like <code>npm audit</code>, and reviewing the packages before including them are essential practices to maintain the safety and integrity of the project.</p>
<p>In conclusion, using Node.js with ASP.NET Core allows developers to utilize the best of both worlds, combining the extensive and diverse ecosystem of JavaScript with the robustness and performance of ASP.NET Core, and it’s not just about saving development time but also about utilizing the right tool for the right job.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="c06be90a-3bb1-4d55-a2ac-cd6554d31349" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">vs* という名前について書く</span>
                    <a href="#c06be90a-3bb1-4d55-a2ac-cd6554d31349" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">結局、Visual Studio で生成したのは、Docker 関連のもの一つだけ。</p>
                            <p class="note_contents">ソリューション名の変更を考えたが、dotnetTemp は前半が長くてうるさい。.netTemp では隠しディレクトリー的。csTemp は、C# でないものも今後追加する可能性があるため微妙。しっくりくる対案がないので現状のままでいく。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="205ef795-4bc4-4c15-9718-4db1320fae47" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">後処理</span>
                    <a href="#205ef795-4bc4-4c15-9718-4db1320fae47" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">clean.ps1 を実行。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">レポジトリーを同期。</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </body>
</html>
