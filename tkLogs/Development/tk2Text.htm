<!DOCTYPE html>
<html>
    <head>
        <title>tk2Text</title>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <style>@import url('https://fonts.googleapis.com/css2?family=M+PLUS+1&family=M+PLUS+1+Code&display=swap');body{margin:0;background-color:#111;color:#ddd;font-family:'M PLUS 1',sans-serif;font-size:1rem;line-height:1.5;overflow-wrap:break-word;word-wrap:break-word}a{color:#69c;text-decoration:underline}a:hover,a:active,a:focus{font-weight:bold}div.task,div.note,div.file,div.image{margin:10px;border:1px solid transparent}div.entries>div.note{border:1px solid #333}div.title{background-color:#333;padding:20px 30px;font-size:2rem;font-weight:bold}@media(width< 576px){div.title{padding:15px 22.5px;font-size:1.5rem;}}a.title{color:#ddd;text-decoration:none}a.title:hover,a.title:active,a.title:focus{text-decoration:underline}div.done{background-color:#115}div.done:hover{background-color:#337}div.canceled{background-color:#511}div.canceled:hover{background-color:#733}div.task_contents{margin:10px 15px}span.task_contents{font-weight:bold}a.permalink{visibility:hidden}div.task:hover a.permalink{visibility:visible}div.note{background-color:#111}p.note_contents{margin:15px 20px}div.file{background-color:#111;padding:15px 20px}div.image{background-color:#111;padding:10px}img.image{box-sizing:border-box;vertical-align:top;max-width:100%}div.note_ai_generated{margin:10px;border:1px solid transparent;background-color:#333}div.note_ai_generated>*{margin:15px 20px}pre{background-color:#555;padding:15px 20px;white-space:pre-wrap}code{font-family:'M PLUS 1 Code',monospace;font-size:1rem;line-height:1.5}</style>
    </head>
    <body>
        <div class="title">
            <a href="tk2Text.htm" class="title">tk2Text</a>
        </div>
        <div class="entries">
            <div id="e0906007-2c3a-427a-8d3a-4d22f73fb569" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">アイコンを設定</span>
                    <a href="#e0906007-2c3a-427a-8d3a-4d22f73fb569" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">「ふう～。よくがんばった～」のニュアンスで適当に。</p>
                            <p class="note_contents">Face With Spiral Eyes 3d Icon | FluentUI Emoji 3D Iconpack | Microsoft<br />
                                <a href="https://www.iconarchive.com/show/fluentui-emoji-3d-icons-by-microsoft/Face-With-Spiral-Eyes-3d-icon.html" target="_blank" class="url">https://www.iconarchive.com/show/fluentui-emoji-3d-icons-by-microsoft/Face-With-Spiral-Eyes-3d-icon.html</a></p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="c451dd16-df3a-4276-bd5a-1edbf673d227" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">ソースコードを公開</span>
                    <a href="#c451dd16-df3a-4276-bd5a-1edbf673d227" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="671313a3-091c-4ea8-8246-c728aaa42952" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">v0.6 としてアーカイブ</span>
                    <a href="#671313a3-091c-4ea8-8246-c728aaa42952" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="6c3adbff-d40e-4031-be45-67ebb925b03f" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">タスクごとに個別の HTML/Markdown ページを出力できるようにする</span>
                    <a href="#6c3adbff-d40e-4031-be45-67ebb925b03f" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">レポジトリー内のファイル数が増えすぎる。数千になる。HTML のアンカーで足りる。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="0c8b895b-a8e2-4d70-9ac6-0c2fb799bc85" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">日報生成時にタスクリストの優先度やタスクの処理日を認識させる</span>
                    <a href="#0c8b895b-a8e2-4d70-9ac6-0c2fb799bc85" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">優先度はどうでもいい。処理日も実装しないことになった。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="da5136f2-e421-42e8-822b-cb3b7d6d4716" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">JSON での出力の有用性について考える</span>
                    <a href="#da5136f2-e421-42e8-822b-cb3b7d6d4716" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">いったん共通言語にして、さらにほかのアプリで使えるように？</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">付加価値につながらないのでやめておく。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="c8f24073-75e6-4c8b-9761-eed3f6ef0742" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">GUID によりメモから他のタスクやメモにリンクできるようにする</span>
                    <a href="#c8f24073-75e6-4c8b-9761-eed3f6ef0742" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">相対パスの階層の深さを揃えるなどの工夫が必要。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">過剰管理になる。付加価値につながらない。</p>
                            <p class="note_contents">たまに便利な機能なのは分かるが、なくてもなんとかなる。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="e739f0fc-8c96-4e72-a29e-49027f67faa2" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">複数のタスクリストを単一のファイルに出力できるようにする</span>
                    <a href="#e739f0fc-8c96-4e72-a29e-49027f67faa2" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">Nekote の新旧のタスクリストの統合に便利。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="9576de2d-cb58-43a3-94d3-ceceae386593" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">「メモ」というタスクのメモの出力時の扱いに工夫</span>
                    <a href="#9576de2d-cb58-43a3-94d3-ceceae386593" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">書きながら考えることがある。そこからタスクが生じてくる。まずタスクがあって、そこにメモを追加していくのとは異なる流れでのメモの追加がたびたびある。それを「メモ」というタスクにメモとして追加していくのが慣例になっている。</p>
                            <p class="note_contents">そういったメモは、上位の「メモ」というタスクが処理された日時でなく、それぞれのメモが入力された日時により出力の順序が決まるべき。</p>
                            <p class="note_contents">「メモ」というタスクが複数ある場合にも対処。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="8464a651-a6de-40a6-ac2f-62c28815900f" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">タスクやメモの除外の指定に行末コメントを添えられるようにする</span>
                    <a href="#8464a651-a6de-40a6-ac2f-62c28815900f" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="53c035b4-7a3a-474a-b542-9e2466aae51e" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">Completed.txt があるとタスクリストが無視されるようにする</span>
                    <a href="#53c035b4-7a3a-474a-b542-9e2466aae51e" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">やめておく。ワークフローとの整合性が低いため。</p>
                            <p class="note_contents">基本、自分は taskKiller 側でザッと校正してからタスクやメモを確定している。しかし、深夜など、寝ぼけているときも多い。多少の誤字・脱字はどうでもいいが、外部に出せない情報をメモに誤って貼りつけてしまっているなども想定は必要。</p>
                            <p class="note_contents">そういうものを直すときには、タスクのファイルを直接編集する。その後のページ生成時、Completed.txt があるからそのファイルの変更がページ側に反映されないのは不便。Completed.txt をいったん消して、再生成し、Completed.txt を戻すのは手間が大きい。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="b466f15b-49e8-4549-ab41-e2a8772e26f3" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">Completed.txt があってもタスクリストが無視されないオプションを追加</span>
                    <a href="#b466f15b-49e8-4549-ab41-e2a8772e26f3" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">常に Completed.txt の方が無視される仕様に変更。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="eabab306-fc1e-4121-b071-703f4e2d82be" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">アーカイブしたタスクリストを一時的に展開したのであっても検出できるようにする</span>
                    <a href="#eabab306-fc1e-4121-b071-703f4e2d82be" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">現在の実装では taskKiller.exe があるかどうかを見るはず。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">Tasks ディレクトリーを探すように変更した。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="26ea18f4-90af-4e74-8373-ed039eb95e33" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">処理済みのタスクリストをアーカイブしない運用を想定</span>
                    <a href="#26ea18f4-90af-4e74-8373-ed039eb95e33" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">数千の処理済みタスクを毎回ロードすると負荷が大きい。クイック生成とフル生成の区別が必要。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">Completed.txt により負荷を低減し、たまに気が向いたときに古いタスクリストをゴソッとアーカイブする運用で調整中。「タスクリストがあればログを出力」をしても、「タスクリストがなくなったのでログも消す」はしない。完全に終わったプロジェクトならアーカイブしない理由がない。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">多くのタスクリストを出力時に除外し、数ヶ月ごとくらいでいいので、定期的にアーカイブをしていくのが最善。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="b53b8afd-cf76-4926-88b7-edf9d093598d" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">タスクリストごと出力から除外できるようにする</span>
                    <a href="#b53b8afd-cf76-4926-88b7-edf9d093598d" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ログをコミット前に見返すことは最近の行動の結果のチェックになるため、公開するログとそうでないものを別々のところに出力し、いずれも差分を見る運用を最初は考えたが、公開しないもののチェックは費用対効果の乏しい作業になる。</p>
                            <p class="note_contents">後者も、自分が全文検索で特定の情報を探すなどできれば便利だが、それは *.htm で何とかなる。アーカイブしていても、タスクリスト名が分かれば、一時的に展開しての全文検索は、頻繁でないなら大したコストでない。</p>
                            <p class="note_contents">公開しないならページを生成せず、その分の時間で次のタスクを処理するのみ。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="3018273c-1384-45d5-9aaa-80ce4a563350" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">「読書メモ」フラグによる最適な出力を可能にする</span>
                    <a href="#3018273c-1384-45d5-9aaa-80ce4a563350" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">いずれは taskKiller 的な読書を外出中にも行えるようにしたいが、初期的な開発コストが大きすぎる。枯れている taskKiller があるのだから、パソコンにへばりつく生活が続くが、まずは taskKiller ベースで合理的な読書を行えるように。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">一字一句読むようなのは、もう時間が許さない。後期高齢者になればそういう時間ができるかもしれないが、自分はそうなる前に糖尿病で死ぬ（笑）。おそらく自分には、昔のような読書はもうできない。そう割り切った上、これからも継続できる読書を考える。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">フラグは、taskKiller の Settings.txt 内より、tk2Text の Parameters.txt 内の方が良さそう。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">読書だからこういうフォーマットがいいというのが思いつかない。外部のアプリやサービスの試用などと性質的には大差のない活動。そのうちアイデアが生じれば出力モードを切り替えられるというのを想定した Parameters.txt のフォーマットにはできているので、いったんこのフラグは見送る。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="9d8aea4f-0ea1-499c-aa68-7228e87885da" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">指定したディレクトリー内の全てのタスクリストを一括処理できるようにする</span>
                    <a href="#9d8aea4f-0ea1-499c-aa68-7228e87885da" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="dca95892-38f6-434a-a268-340ca6f2331a" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">公開されるログに特定の単語が含まれていると警告が表示されるようにする</span>
                    <a href="#dca95892-38f6-434a-a268-340ca6f2331a" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">夜中1時に帰宅して3時まで働く日などもあり、そういうときには何を OK してしまうか分からない。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">徹底しきれないことなので手をつけない。自分が気をつけるしかない。SNS のコメントなどにも書いてしまいうること。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="cc668d0e-c65a-43ef-b875-e04ab0bcee3f" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">出力するものを単一の List に入れるコードを共通化</span>
                    <a href="#cc668d0e-c65a-43ef-b875-e04ab0bcee3f" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ほかの形式での出力も実装する場合に便利。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">そうでもない。すぐできること。また、形式によりデータ構造なども変える可能性がある。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="635daef7-9047-4892-974d-cc3370c2fa5a" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">Merge などにフルパスが必要でないようにする</span>
                    <a href="#635daef7-9047-4892-974d-cc3370c2fa5a" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">該当するものが複数あるなら警告を出す。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">危ないのでやめておく。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="acda744c-ba68-4436-a3fb-ece3bfe43540" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">各部のメッセージを見直す</span>
                    <a href="#acda744c-ba68-4436-a3fb-ece3bfe43540" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">たとえば Attributes: * が2回出力されている。片方には Applied を入れてもよい。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="09fa28e3-155c-44ad-9690-76da616bed62" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">属性としてカテゴリーを指定できるようにする</span>
                    <a href="#09fa28e3-155c-44ad-9690-76da616bed62" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="39aaadde-f907-4a98-9257-2ff8cf422006" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">カテゴリーの順序が定義順になるのを確認</span>
                    <a href="#39aaadde-f907-4a98-9257-2ff8cf422006" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="1fb2a2c2-5cdf-4830-8468-25263f9326aa" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">定義されていないカテゴリーについて警告を出す</span>
                    <a href="#1fb2a2c2-5cdf-4830-8468-25263f9326aa" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="1eee2c2b-85a6-42c5-b8e7-579872f122d2" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">各部で同じパラメーターを二度指定した場合の処理をチェック</span>
                    <a href="#1eee2c2b-85a6-42c5-b8e7-579872f122d2" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="98cb5639-9a0a-4109-a056-de1f7008c87a" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">添付ファイルの出力先のパスが極力変わらないようにする</span>
                    <a href="#98cb5639-9a0a-4109-a056-de1f7008c87a" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">AttachedAtUtc で並び替えてから順番にパスをマップする。taskKiller の添付ファイルの抜き差しは頻繁でないため、このくらいで十分。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="1a2d4122-fefc-4a80-aa7e-68db27c4c36c" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">元データ側に存在しない添付ファイルについて警告を出す</span>
                    <a href="#1a2d4122-fefc-4a80-aa7e-68db27c4c36c" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="5ca8be39-7999-4a3e-85cc-dd4a9c70653a" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">メモに含まれる URL やメアドをリンクにする</span>
                    <a href="#5ca8be39-7999-4a3e-85cc-dd4a9c70653a" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">2023.07.03 月曜日<br />
                                15:27 井ノ口 what would be the best regular expression to detect email addresses?<br />
                                15:27 AIチャットちゃん To detect email addresses, you can use the following regular expression:</p>
                            <p class="note_contents">```<br />
                                \b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}\b<br />
                                ```<br />
                                This regular expression checks for the following patterns:</p>
                            <p class="note_contents">- `[A-Za-z0-9._%+-]+`: Matches one or more alphanumeric characters, periods, underscores, percent signs, plus signs, or hyphens, which are valid characters in the username part of an email address.</p>
                            <p class="note_contents">- `@[A-Za-z0-9.-]+`: Matches the &quot;@&quot;, followed by one or more alphanumeric characters, periods, or hyphens, which are valid characters in the domain part of an email address.</p>
                            <p class="note_contents">- `\.[A-Za-z]{2,}`: Matches a period, followed by two or more alphabetical characters, which represent the top-level domain (e.g., .com, .net, .org).</p>
                            <p class="note_contents">- `\b`: Represents a word boundary, ensuring that the regex matches the entire email address and not just a part of it.</p>
                            <p class="note_contents">Please note that this regular expression is a simplified version that may not capture all possible variations of email addresses, as the specifications for valid email addresses can vary. It&#39;s recommended to consider using a dedicated email address validation library or service for more accurate and comprehensive validation.<br />
                                15:28 井ノ口 what about urls?<br />
                                15:28 AIチャットちゃん To detect URLs, you can use the following regular expression:</p>
                            <p class="note_contents">```<br />
                                \b(?:https?://|www\.)\S+\b<br />
                                ```<br />
                                This regular expression checks for the following patterns:</p>
                            <p class="note_contents">- `(?:https?://|www\.)`: Matches either &quot;<a href="http://&quot;," target="_blank" class="url">http://&quot;,</a> &quot;<a href="https://&quot;," target="_blank" class="url">https://&quot;,</a> or &quot;<a href="www.&quot;," target="_blank" class="url">www.&quot;,</a> indicating the start of a URL.</p>
                            <p class="note_contents">- `\S+`: Matches one or more non-whitespace characters, which represent the domain and path part of a URL.</p>
                            <p class="note_contents">- `\b`: Represents a word boundary, ensuring that the regex matches the entire URL and not just a part of it.</p>
                            <p class="note_contents">Please note that this regular expression captures most common URL formats, but it may not account for all possible variations or handle complex cases. The rules for valid URLs can be quite complex, considering different protocols, subdomains, and query parameters. For more comprehensive and accurate URL detection, it is recommended to utilize a specialized URL parsing library or service.</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">正規表現をググると、各所で「完璧なものはない」との注意書きがある。それなら9割くらいを検出できるパターンをできるだけシンプルに書いて多少のミスには目をつむるのが合理的と思っていたところ、AI が一発でそういったものを出してきてビビった……。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="0788abc0-f546-4802-bf84-545c23cadc94" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">Markdown をやめて HTML での出力に切り替える</span>
                    <a href="#0788abc0-f546-4802-bf84-545c23cadc94" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">制限がきつすぎて何もできない。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="03e3b547-b8d8-40c7-ae3c-e21ef6be8af2" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">CSS ファイルを同梱</span>
                    <a href="#03e3b547-b8d8-40c7-ae3c-e21ef6be8af2" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">CSS をページに埋め込む予定だったが、プログラムの再実行なく全てのページのスタイルを変更できた方が便利なので CSS ファイルを静的ファイル扱いして同梱する。プログラムから生成させない。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="103ea35c-d54a-4eda-8de2-2f544d20999f" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">フォントを IBM Plex 系にしてみる</span>
                    <a href="#103ea35c-d54a-4eda-8de2-2f544d20999f" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">* font-family: &#39;Noto Sans Mono&#39;, &#39;Noto Sans JP&#39;, sans-serif;<br />
                                * font-family: &#39;IBM Plex Mono&#39;, &#39;IBM Plex Sans JP&#39;, sans-serif;</p>
                            <p class="note_contents">日本語の字体が美しく、なおかつシリーズ内に *Mono があって統一感も高いのは、これら二つ。</p>
                            <p class="note_contents">見比べた結果、主観的には、後者の方が少し細く、少しゆったりしていて、よりモダンな字体に見えた。</p>
                            <p class="note_contents">前者の *Mono は、Consolas のように、少しだけボールドに寄っている。日本語の部分は、画数が多いので400でも太さがわずかに抑えられていて、前者だと *Mono との統一感が少し劣る。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="4183247e-a636-4652-9f4a-f79a394e687f" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">各部の行高を設定</span>
                    <a href="#4183247e-a636-4652-9f4a-f79a394e687f" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="df1c8a6c-adc0-4315-9163-974a84725651" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">いくつかのフォントファミリーでマージンなどをテスト</span>
                    <a href="#df1c8a6c-adc0-4315-9163-974a84725651" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="d09fdb2f-f30a-4124-8c58-3443f3903671" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">link タグの属性などをチェック</span>
                    <a href="#d09fdb2f-f30a-4124-8c58-3443f3903671" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="89e53c9a-5e93-4d51-ad08-1c01f4ddce78" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">HTML 出力において全ての配列的なところに上位タグを用意</span>
                    <a href="#89e53c9a-5e93-4d51-ad08-1c01f4ddce78" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">task, note には entries を、file には files を。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="e2853a0e-0fe0-4f2e-b0da-8e2353a35d1b" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">マージンについて書いておく</span>
                    <a href="#e2853a0e-0fe0-4f2e-b0da-8e2353a35d1b" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">10px を指定すると、アセンダーなどの分で上下の方が広くなり、最初の文字の左と上の余白が一致しなくなる。その分を考慮し、10px 15px というのが基本。</p>
                            <p class="note_contents">それは1行のときの話で、複数行だと、それでは段落間が狭く、行の折り返しなのか新しい段落なのか、はっきりしない。そこをギリギリ広げると上下マージンは 15px が良い。同じく行高の分を考慮し、左右マージンは 20px になる。</p>
                            <p class="note_contents">ページタイトルを 20px 30px としたが、これは1行かつフォントサイズが 2em と body の2倍だから。アセンダーなども2倍なのでマージンも2倍にすることで最初の文字の左と上の余白が同じく一致する。</p>
                            <p class="note_contents">上下と左右の比を 2 : 3 として全体を統一することも考えた。line-height が1.5であることも勘案してのこと。</p>
                            <p class="note_contents">しかし、フォントサイズが一定のまま &lt;p&gt; が入るメモ部分は、上下と左右の差がアセンダー分でないといけない。統一感のない指定になったが、複数行のところが 15px 20px というのは理にかなっている。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="478bd41e-2872-4e97-a214-322375fa04d4" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">ページ内メニューを生成</span>
                    <a href="#478bd41e-2872-4e97-a214-322375fa04d4" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">なくてもよい気がしてきた。既に十分に見やすい。参照時には、どうせ全文検索をする。タスクの追加時に二つの差分が生じるのが自分にとってめんどくさいというのも大きい。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="4087822d-6332-4de6-9f39-53b8759577d8" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">ページタイトルのクリックにより # なしの URL になるようにする</span>
                    <a href="#4087822d-6332-4de6-9f39-53b8759577d8" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="69ce5011-c034-4cdf-8926-0613aa82f662" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">a:hover, a:active, a:focus について書いておく</span>
                    <a href="#69ce5011-c034-4cdf-8926-0613aa82f662" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">a:link と a:visited については割愛。紫になるのが嫌なら a に色をつけるだけ。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">これら三つをいずれもつけないと、ホバーしても、リンクをクリックした状態でマウスの動きを止めても、ほかのリンクにフォーカスを当ててから Tab キーでそこに移動しても、リンクのスタイルが変わらない。</p>
                            <p class="note_contents">a:hover は、ホバー時、クリック時にスタイルが変わり、Tab キーで移動してきても変わらない。もっとも、ホバーせずクリックするのがパソコンでは難しいだけのこと。</p>
                            <p class="note_contents">a:active は、クリック時のみ変わり、ホバー時はもちろん、意外と Tab キーでの移動でも変わらない。</p>
                            <p class="note_contents">a:focus は、クリック時と Tab キーでの移動時に変わり、ホバー時には変わらない。もっとも、これもクリックによりフォーカスをもらっているだけのこと。</p>
                            <p class="note_contents">a:active という識別子だが、これは a:pressed 的に見た方がよさそうだ。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">実装においては、視覚障害者に配慮する。色が青いだけのリンクが最近は主流の印象があるが、それではそこがリンクだということが分からない人がいる。</p>
                            <p class="note_contents">ページタイトルなど、いつも下線をつけているとさすがにデザイン上の問題のあるところは妥協するとして、ほかのところでは下線をつけておき、a:hover, a:active, a:focus のいずれかになると下線と太字の「両方」が適用されるように。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="877b3b72-b4f3-4b1c-ac3e-0a263d0c1e5c" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">class をつけるべきタグを探す</span>
                    <a href="#877b3b72-b4f3-4b1c-ac3e-0a263d0c1e5c" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">「何に含まれる何」というので CSS を適用できるが、HTML の文字数を減らそうと一部のタグで class を省いたところ、CSS 側の各所で想定外の継承が起こり、その解決のため CSS がグダグダになった。</p>
                            <p class="note_contents">&lt;p&gt; や &lt;a&gt; など、属性なしのタグは、ページの主たるコンテンツ部分のみに。それ以外では class で絞り込む。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="898f1e45-a383-4829-9d58-628080b1dd42" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">固有 class がついているセレクターの上位の要素をなくす</span>
                    <a href="#898f1e45-a383-4829-9d58-628080b1dd42" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">たとえば div.title &gt; a.title は冗長。下がかぶらないなら上は不要。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="a689c11f-5bb1-4a4e-8324-839914e4e48f" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">リンクのホバーなどにスタイルを適用</span>
                    <a href="#a689c11f-5bb1-4a4e-8324-839914e4e48f" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="dbbae6e2-3810-4af5-b40d-08160b910874" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">ページにおいて # つきの URL をコピーしやすくする</span>
                    <a href="#dbbae6e2-3810-4af5-b40d-08160b910874" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">&amp;infin; からリンクさせる。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="91802a18-51b2-49e5-93dc-802f68804d1b" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents"># でのページ内リンクの実装方法を調べる</span>
                    <a href="#91802a18-51b2-49e5-93dc-802f68804d1b" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">&lt;a name=&quot;...&quot;&gt;&lt;/a&gt; を埋め込むように言う人がいたが、Microsoft のドキュメントでは &lt;h*&gt; の id が使われていた。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">We may achieve the same effect by making the header elements themselves the anchors:</p>
                            <p class="note_contents">&lt;H1&gt;Table of Contents&lt;/H1&gt;<br />
                                &lt;P&gt;&lt;A href=&quot;#section1&quot;&gt;Introduction&lt;/A&gt;&lt;BR&gt;<br />
                                &lt;A href=&quot;#section2&quot;&gt;Some background&lt;/A&gt;&lt;BR&gt;<br />
                                &lt;A href=&quot;#section2.1&quot;&gt;On a more personal note&lt;/A&gt;&lt;BR&gt;<br />
                                ...the rest of the table of contents...<br />
                                ...the document body...<br />
                                &lt;H2 id=&quot;section1&quot;&gt;Introduction&lt;/H2&gt;<br />
                                ...section 1...<br />
                                &lt;H2 id=&quot;section2&quot;&gt;Some background&lt;/H2&gt;<br />
                                ...section 2...<br />
                                &lt;H3 id=&quot;section2.1&quot;&gt;On a more personal note&lt;/H3&gt;<br />
                                ...section 2.1...</p>
                            <p class="note_contents">という記述がある。</p>
                            <p class="note_contents">古いバージョンの HTML だが、これをあとから廃止すると多数のページが動かなくなるので、今後も大丈夫だろう。</p>
                            <p class="note_contents">Links in HTML documents<br />
                                <a href="https://www.w3.org/TR/html401/struct/links.html" target="_blank" class="url">https://www.w3.org/TR/html401/struct/links.html</a></p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="b3bb4730-a22d-4c03-85a0-152c9e455cad" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">スマホで見たときのフォントサイズなどを調整</span>
                    <a href="#b3bb4730-a22d-4c03-85a0-152c9e455cad" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">「これ以下だとスマホだ」と判断するのは、576px でよさそう。Bootstrap がそうなっているようだし、Chrome の F12 キーのモードで全てのデバイスをチェックしても、iPad より小さいものは全てがこの幅に収まる。</p>
                            <p class="note_contents">How to Set Width Ranges for Your CSS Media Queries<br />
                                <a href="https://www.freecodecamp.org/news/media-queries-width-ranges/" target="_blank" class="url">https://www.freecodecamp.org/news/media-queries-width-ranges/</a></p>
                            <p class="note_contents">Breakpoints &#183; Bootstrap v5.0<br />
                                <a href="https://getbootstrap.com/docs/5.0/layout/breakpoints/" target="_blank" class="url">https://getbootstrap.com/docs/5.0/layout/breakpoints/</a></p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ページタイトルのみ、少し大きく見えた。パソコンで見たときの 2em と標準のフォントサイズである 1em との間を取り、パディングをそれに合わせた。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="3a8d8045-1364-43cf-b936-bea7d3167490" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">DOCTYPE や viewport の必要性について再チェック</span>
                    <a href="#3a8d8045-1364-43cf-b936-bea7d3167490" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">&lt;!DOCTYPE html&gt; は、なくても困らないが、入れないと怒られる。</p>
                            <p class="note_contents">Error: Start tag seen without seeing a doctype first. Expected &lt;!DOCTYPE html&gt;.</p>
                            <p class="note_contents">ほかと違って警告でなくエラー扱いなので、とりあえず入れておく。</p>
                            <p class="note_contents">The W3C Markup Validation Service<br />
                                <a href="https://validator.w3.org/" target="_blank" class="url">https://validator.w3.org/</a></p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">viewport も必要。ないと Chrome の F12 キーのモードによりスマホでの表示をシミュレーションするにおいて、読みにくいくらい文字が小さくなる。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="88a35563-8ebf-49b9-8d82-6113a40d1c35" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">長い行の折り返しについてチェック</span>
                    <a href="#88a35563-8ebf-49b9-8d82-6113a40d1c35" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">Handling Long Words and URLs (Forcing Breaks, Hyphenation, Ellipsis, etc) | CSS-Tricks - CSS-Tricks<br />
                                <a href="https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/" target="_blank" class="url">https://css-tricks.com/snippets/css/prevent-long-urls-from-breaking-out-of-container/</a></p>
                            <p class="note_contents">に、</p>
                            <p class="note_contents">/* These are technically the same, but use both */<br />
                                overflow-wrap: break-word;<br />
                                word-wrap: break-word;</p>
                            <p class="note_contents">-ms-word-break: break-all;<br />
                                /* This is the dangerous one in WebKit, as it breaks things wherever */<br />
                                word-break: break-all;<br />
                                /* Instead use this non-standard one: */<br />
                                word-break: break-word;</p>
                            <p class="note_contents">/* Adds a hyphen where the word breaks, if supported (No Blink) */<br />
                                -ms-hyphens: auto;<br />
                                -moz-hyphens: auto;<br />
                                -webkit-hyphens: auto;<br />
                                hyphens: auto;</p>
                            <p class="note_contents">とある。</p>
                            <p class="note_contents">-ms-word-break: break-all; の直前の空行が気になるが、use both なので、these が三つを示しているのに誤って空行を入れてしまったのではなさそう。</p>
                            <p class="note_contents">Chrome と Firefox の両方で問題がないため、いったん、</p>
                            <p class="note_contents">* overflow-wrap: break-word;<br />
                                * word-wrap: break-word;</p>
                            <p class="note_contents">だけで様子を見る。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="eeab5801-abd1-465d-86a4-1f288bceea04" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">添付画像が大きければ縮小版が生成されるようにする</span>
                    <a href="#eeab5801-abd1-465d-86a4-1f288bceea04" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="97028474-de17-4ce7-b734-8af22ccae8f7" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">画像サイズが調整されるようにする</span>
                    <a href="#97028474-de17-4ce7-b734-8af22ccae8f7" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="12b8cbd6-4a19-4f5e-86f3-c120cd6fcc7d" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">パスの / と \ の違いが問題にならないようにする</span>
                    <a href="#12b8cbd6-4a19-4f5e-86f3-c120cd6fcc7d" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="e72c4e0e-ad0b-41b8-b187-9e7fce772c4b" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">添付ファイルをページに出力できるようにする</span>
                    <a href="#e72c4e0e-ad0b-41b8-b187-9e7fce772c4b" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="ca681679-082f-42fe-9cc7-f9e011f30bb0" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">srcZip.txt を更新</span>
                    <a href="#ca681679-082f-42fe-9cc7-f9e011f30bb0" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="27d87026-9170-4dac-af14-09431ef3fe01" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">メモに添付ファイルがつくところのマージンなどをチェック</span>
                    <a href="#27d87026-9170-4dac-af14-09431ef3fe01" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">div.task, div.note, div.file に 10px のマージンをつけているので、画像もそうした。</p>
                            <p class="note_contents">ただ、画像だとパディングでないと box-sizing: border-box に設定しても右側の枠線からはみ出る。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">画像でないファイルには、メモの &lt;p&gt; と同様、15px 20px のマージンを設定した。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">添付ファイルのところで a や img に display: block を設定するのは、そうでないと余白をとれなかったり、Firefox では画像の真下に少しの余白が生じたりするため。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">タスクにメモがつくところでは、タスクの内容の上下の余白が視覚的に一致。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">メモに添付ファイルがつくところでも、1行だけのメモの内容の上下の余白が視覚的に一致。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="2c55b430-6daf-41d3-bbba-d4666ab44866" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">各部で項目のソートをチェック</span>
                    <a href="#2c55b430-6daf-41d3-bbba-d4666ab44866" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">* タスクリスト全体の添付ファイル<br />
                                * タスクとメモを混ぜたもの<br />
                                * タスクの添付ファイル<br />
                                * タスクのメモ<br />
                                * メモの添付ファイル</p>
                            <p class="note_contents">に加えて</p>
                            <p class="note_contents">* 残っている古い添付ファイル</p>
                            <p class="note_contents">をソートできている。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="bf036c18-3795-48ad-9398-39bb35798cc3" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">出力されるものとそうでないものをチェック</span>
                    <a href="#bf036c18-3795-48ad-9398-39bb35798cc3" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">State や GUID に関連するところを全体的に。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">* タスクの絞り込み<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;* 状態<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;* GUID<br />
                                * メモの絞り込み<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;* 状態<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;* GUID<br />
                                * 添付ファイルの絞り込み<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;* GUID</p>
                            <p class="note_contents">をチェックした。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="42fd916e-dc28-4f21-a605-a7fccd96eeab" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">イレギュラーな名前の添付ファイルを表示・ダウンロードできるのを確認</span>
                    <a href="#42fd916e-dc28-4f21-a605-a7fccd96eeab" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">&amp;.jpg, &amp;copy;.jpg を試した。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="87c97989-2abb-40ec-aca4-cf65146ef140" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">画像の右側の余白をクリックしても原版が開かれないようにする</span>
                    <a href="#87c97989-2abb-40ec-aca4-cf65146ef140" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">img のすぐ下の余白については display: block により消すとの情報を最初に得たが、vertical-align: baseline こそが問題のようだ。これを baseline 以外にすると解決する。</p>
                            <p class="note_contents">基本的には左から右へ、上から下へのレンダリングなので、top に変更して様子を見る。</p>
                            <p class="note_contents">How to get rid of the gap under the image ? - GeeksforGeeks<br />
                                <a href="https://www.geeksforgeeks.org/how-to-get-rid-of-the-gap-under-the-image/" target="_blank" class="url">https://www.geeksforgeeks.org/how-to-get-rid-of-the-gap-under-the-image/</a></p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">display: block の問題は、画像の幅が画面の幅より小さくて右側に余白ができるときに、そこも img のブロックの一部とされること。画像としての情報がないので余白だが、&lt;img&gt; としては存在し、それが &lt;a&gt; を押し広げるため、そこをクリックしても原版が表示される。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">img.image に合わせて a.file にも display: block を指定していたが、inline-block が無難。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="ba8ec712-c620-4b50-ad9a-b72a07952a2d" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">タスクの内容のところに改行を入れる</span>
                    <a href="#ba8ec712-c620-4b50-ad9a-b72a07952a2d" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">&lt;span&gt; の前後に空白系文字が入ったことにより span.contents の margin が不要になったので消した。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="f851884b-59b6-45e2-aa41-242b3949c531" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">メモのインデントが保たれるようにする</span>
                    <a href="#f851884b-59b6-45e2-aa41-242b3949c531" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="bc3606eb-f102-4460-a0df-7e698fadb472" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">添付ファイルの横にファイルサイズを表記</span>
                    <a href="#bc3606eb-f102-4460-a0df-7e698fadb472" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">画像にはつけない。ダウンロードするかどうかをサイズにより判断するほど大きなものを添付する考えはない。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="bd3ad059-ae66-4768-95eb-84eb3f26c45b" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">プロジェクト名について書く</span>
                    <a href="#bd3ad059-ae66-4768-95eb-84eb3f26c45b" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">tk2Text という名前に反し、出力するものは HTML。AI をかましての多言語化も可能性としてはゼロでない。名前が微妙になってきている。</p>
                            <p class="note_contents">しかし、めんどくさいので変更しない。tk2Text ソリューション内に tkView などが入っている問題もある。レポジトリー名から変更することになり、それに見合う利益がない。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="20f05e82-937c-4e9a-aa82-b1914ed1faba" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">色が全く分からない人でも操作できる表示なのを確認</span>
                    <a href="#20f05e82-937c-4e9a-aa82-b1914ed1faba" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">最初、Done を青、Canceled を赤と区別していたが、それでは分かりにくい人を想定し、&amp;check; と &amp;cross; も入れた。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="0c8b8fde-7703-4ead-8443-10e37292312f" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">各部で HTML エンコードが行われているのを確認</span>
                    <a href="#0c8b8fde-7703-4ead-8443-10e37292312f" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="3464689c-20ff-4b07-a713-f7451a4d8628" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">CSS 側を用意し忘れているタグや class がないか調べる</span>
                    <a href="#3464689c-20ff-4b07-a713-f7451a4d8628" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ザッと見たが、あまり重要でない。そもそも、プロパティーの値を指定しないタグ名やクラス名を CSS ファイル内に入れる必要があるかどうかも難しい。見通しのため一応入れたが、VSC は不要と文句を言ってくる。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="fa35b8d3-2864-41cf-8cb2-ff8a847218a7" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">HTML の文法をオンラインサービスで検証</span>
                    <a href="#fa35b8d3-2864-41cf-8cb2-ff8a847218a7" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">添付ファイル名に半角空白が入っていると叱られるが、これはこのままでよい。HTML をブラウザーが構文解析するにおいて絶対に問題にならないこと。</p>
                            <p class="note_contents">img に alt がないとも言われるが、Google の画像検索か何かでも alt=&quot;&quot; だった記憶がある。全ての画像に、その内容を示す文字列をつけることは現実的に難しい。かといって、alt=&quot;&quot; で検証プログラムを黙らせるのも違和感がある。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">添付ファイル名について、もう少し調べた。Chrome の F12 キーのモードで添付ファイルの URL を貼りつけて「ネットワーク」のところを見たところ（Ctrl + R が必要だった）、「リクエスト URL」のところには URL エンコードされた文字列が表示された。</p>
                            <p class="note_contents">ブラウザーは、href を読むにおいて、&amp;amp; など、明らかにエンコードされている文字を元に戻すが、クエリー文字列の区切りとしての &amp; などは、後続の文字列とセットで「エンコードされたもの」には見えないなら、エラーにもしない。</p>
                            <p class="note_contents">一方、href に &lt; などがそのまま含まれることは、場合によってはタグの始まりや終わりが分かりにくくなるなどのリスクがある。</p>
                            <p class="note_contents">それを防ぐには HTML エンコードと URL エンコードの二つの方法がある。</p>
                            <p class="note_contents">そのうち後者は、https:// の :// などまで変えてしまい、そもそも &lt;a&gt; を、機能しないようにしてしまう。</p>
                            <p class="note_contents">となると消去法で HTML エンコードを行うことになる。</p>
                            <p class="note_contents">それでは半角空白が残るが、それを .NET 的に + にするか、そこだけ URL エンコードして %20 にするかは、ブラウザーが HTML を構文解析するにおいてはいずれも不可欠なことでなく、その後、ブラウザーの方が適切に処理して次の GET などを行う。</p>
                            <p class="note_contents">少なくとも、そこに半角空白を残すことで &lt;a&gt; が機能しないとか、セキュリティーの脆弱性が生じるとかはない。</p>
                            <p class="note_contents">といったことから、URL を分解して各部に URL エンコードを行うほどの気合いがないときには、「特に問題もない妥協」として HTML エンコードを行うことにする。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">URL エンコードが必要になるのは、自分が知る限り、クエリー文字列のキーまたは値に &amp; を使いたい場合。これは、そうでないと動かないので不可欠。</p>
                            <p class="note_contents">ただ、このあたりの実装は、ギリギリの綱渡りになる感があって好ましくない。ちょっとミスれば不正な文字が混入する。派生開発に気を遣う。</p>
                            <p class="note_contents">そのため、ルーティングをしっかり行い、そもそも URL に &amp; が入ることをなくす。また、生の文字列を通すときには、完全に16進数にするなど、ブラウザーやサーバーが持つ機能によりほかのものに自動変換されない仕組みを取り入れる。</p>
                            <p class="note_contents">自分が元に戻すことがない限り使用不可能な文字列のままになる仕様が最も堅牢。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="427482e0-d408-46e9-a156-1645faacb3c4" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">CSS のクラス名を全て一意にする</span>
                    <a href="#427482e0-d408-46e9-a156-1645faacb3c4" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="f985fc5b-b144-415a-89f9-5d4874e594c5" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">&lt;a&gt; を inline-block にするのをやめる</span>
                    <a href="#f985fc5b-b144-415a-89f9-5d4874e594c5" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">作法としておかしい。中身がファイルなのか画像なのかでクラス名から区別するべき。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="320e33ab-7366-4460-accd-1773524d4a09" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">CSS ファイルを全体的に改善</span>
                    <a href="#320e33ab-7366-4460-accd-1773524d4a09" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">「ここで気づいたことが、ちょっとスクロールして戻ってみるとほかでも適用可能だった」ということが繰り返されて作業が終わらないので、メモを書きながらやってみる。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">* class の指定を受けないタグを全てなくす<br />
                                * クラス名の一意性を確認<br />
                                * 上下関係によるセレクターを、できるだけ直近の親子関係にする<br />
                                * 直近の親子関係なら &gt; を入れる<br />
                                * diff を取り、差分全てについて実際の表示をテスト</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">img.image の box-sizing: border-box はなくても大丈夫そうだが、ブラウザーの初期値がそうなっていなくて画像がはみ出した時代に困った記憶が根強いため一応残しておく。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="93d31bd0-a30c-45af-8189-4b90d63c5237" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">v0.10 としてアーカイブ</span>
                    <a href="#93d31bd0-a30c-45af-8189-4b90d63c5237" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">けっこう大きな更新になった。一字一句の読み直しは非現実的なので、いったんザッと見るだけで OK コミットにする。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="7e1c8bec-04f7-48c7-8d89-c5ee76de0933" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">srcZip.txt のミスを正す</span>
                    <a href="#7e1c8bec-04f7-48c7-8d89-c5ee76de0933" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">画像の縮小化に必要なファイルが一つ抜けている。ほかもチェック。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">Nekote2018 から引き継がれて、Magick.NET-Q8-AnyCPU.dll も出力される。</p>
                            <p class="note_contents">tk2Text に使われているのは、Magick.NET-Q16-AnyCPU だけ。</p>
                            <p class="note_contents">念のためこれだけを NuGet でインストールした別アプリを作ったところ、Magick.NET-Q16-AnyCPU.dll だけが出力された。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="9edf66ff-7a37-4aee-a1d3-45ce47a04514" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">taskKiller でタスクリスト間のタスクの移動時に状態が変わらないようにしたことの影響を調べる</span>
                    <a href="#9edf66ff-7a37-4aee-a1d3-45ce47a04514" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">大丈夫そう。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="37612ff1-02f1-435c-ade1-0d30a70435c0" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">メニューのページを生成</span>
                    <a href="#37612ff1-02f1-435c-ade1-0d30a70435c0" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">次のバージョンで。まずは Nekote の開発ログなどをチェック・公開。それからのメニュー生成でないと、デッドリンクだらけになる。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">パンくずリストを入れるのが分かりやすいか。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">サイトのようにして全てを公開することが選択肢でなくなってきている。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="597606a5-081f-464e-bcc5-da0911103531" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">src や href を URL エンコードに切り替える → 不要</span>
                    <a href="#597606a5-081f-464e-bcc5-da0911103531" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">いくつかのパターンに分ける必要がある。</p>
                            <p class="note_contents">* ファイル名に、HTML/URL デコードでほかに変わる文字列が含まれている<br />
                                * ファイル名に、HTML/URL エンコードされるべき文字が含まれている<br />
                                * URL がブラウザーでのコピペ時に URL エンコードされている<br />
                                * HTML/URL エンコードされていない、生成されたばかりの URL</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">HTML エンコードされている文字列をさらに URL エンコードするケースは考えにくい。</p>
                            <p class="note_contents">URL → HTML というエンコーディングにおいて影響を受ける文字をリスト化し、それら全てについてテストを行う。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ブラウザーからコピペで得られた URL は、基本的にはブラウザーによって適切に URL エンコードされているとみなせる。</p>
                            <p class="note_contents">そうでない場合に何が起こりうるか、どういう攻撃が成立するかといったことも調べる。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">Is it safe to assume URLs copied from common web browsers are properly URL-encoded and are safe?</p>
                            <div class="note_ai_generated">
<p>While it's generally safe to assume that URLs copied from common web browsers are properly URL-encoded, it's still a good practice to perform proper HTML encoding before embedding them in HTML content. This practice helps ensure consistent rendering across different browsers and prevents potential security vulnerabilities.</p>
<p>Web browsers often display URLs in their decoded form to improve readability for users. However, when embedding URLs in HTML attributes like <code>href</code>, you should still perform HTML encoding to handle characters that have special meanings in HTML (like <code>&lt;</code>, <code>&gt;</code>, <code>&quot;</code>, <code>'</code>, and <code>&amp;</code>). These characters might be present in URLs, and proper encoding helps prevent cross-site scripting (XSS) attacks and other issues related to HTML injection.</p>
<p>Here's an example demonstrating how you can handle URLs copied from web browsers and embed them in HTML using proper HTML encoding:</p>
<pre><code class="language-csharp">using System;
using System.Web;

namespace URLHtmlEncodingExample
{
    class Program
    {
        static void Main(string[] args)
        {
            // URL copied from a browser (decoded form)
            string decodedUrl = &quot;https://www.example.com/path/page.html?query=value&amp;param=123&quot;;

            // Encode the URL for safe embedding in HTML
            string encodedUrl = HttpUtility.HtmlEncode(decodedUrl);

            string html = $&quot;&lt;a href=\&quot;{encodedUrl}\&quot;&gt;Click here&lt;/a&gt;&quot;;

            Console.WriteLine(html);
        }
    }
}
</code></pre>
<p>In this example, even though the <code>decodedUrl</code> appears to be properly formatted, the <code>HttpUtility.HtmlEncode</code> method is used to encode it before embedding it in HTML. This practice ensures that any special characters in the URL are safely handled in the context of HTML content.</p>
<p>By consistently using HTML encoding, you can help mitigate potential risks and maintain a strong security posture for your application.</p>
                            </div>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">URL をブラウザーのアドレス欄からコピーすると URL エンコードされる。その際、全ての URL が全ての主要ブラウザーにおいて完全に同一の文字列になるのかは分からない。</p>
                            <p class="note_contents">HTML の src/href の内容がどう処理されるかもブラウザーにより違いがあるだろう。すでにほとんどが Chrome 系になっているが、HTML の構文解析の処理は異なる可能性があるし、今は同じだとしても今後も同じだという保証はない。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">&lt;html&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&lt;body&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%&lt;br /&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img src=&quot;%.jpg&quot; /&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%25&lt;br /&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img src=&quot;%25.jpg&quot; /&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%20&lt;br /&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img src=&quot;%20.jpg&quot; /&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;%2520&lt;br /&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img src=&quot;%2520.jpg&quot; /&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;amp;&lt;br /&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img src=&quot;&amp;.jpg&quot; /&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;div&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;amp;amp;&lt;br /&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;img src=&quot;&amp;amp;.jpg&quot; /&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/div&gt;<br />
                                &nbsp;&nbsp;&nbsp;&nbsp;&lt;/body&gt;<br />
                                &lt;/html&gt;</p>
                            <p class="note_contents">%.jpg, %20.jpg, &amp;.jpg, &amp;amp;.jpg を用意して上記のページを開いたところ、%20 以外は表示された。</p>
                            <p class="note_contents">* % → 数字が続かず、ただの % とみなされた<br />
                                * %25 → % にデコードされ、%.jpg が表示された<br />
                                * %20 → 半角空白にデコードされ、&quot; .jpg&quot; が見つからなかった<br />
                                * %2520 → %20 にデコードされた<br />
                                * &amp; → 後続の文字列がデコードに適さず、ただの &amp; とみなされた<br />
                                * &amp;amp; → &amp; にデコードされ、&amp;.jpg が表示された</p>
                            <p class="note_contents">src の内容がエンコードされているかどうかを全体から判断する仕組みはないだろう。文字単位で見ていき、デコードできるならそうしているだけの可能性が高い。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">photoPage の古いメモには次のようにある。</p>
                            <p class="note_contents">* クエリー文字列のキーや値、あるいはファイル名といった、値としての正確性が問われるものには、個別に、HTML エンコードでなく、URL エンコードを適用<br />
                                * それらを連結し、URL としたもの全体に、必要に応じてさらに HTML エンコードを適用</p>
                            <p class="note_contents">その後、tk2Text では HTML エンコードだけでよいとの結論に至り、photoPage もそうしたところ、%20.jpg が非表示になった。</p>
                            <p class="note_contents">そこから photoPage ではやはり URL エンコードを行うことになり、tk2Text の方もチェックが必要と思ったのが、このタスクの経緯。</p>
                            <p class="note_contents">photoPage では、</p>
                            <p class="note_contents">xBuilder.AppendLine ($&quot;&lt;a href=\&quot;{WebUtility.UrlEncode (originalDirectoryName)}/{WebUtility.UrlEncode (xFile.OriginalName)}\&quot; target=\&quot;_blank\&quot;&gt;&quot;);<br />
                                xBuilder.AppendLine ($&quot;&lt;img src=\&quot;{WebUtility.UrlEncode (resizedDirectoryName)}/{WebUtility.UrlEncode (xFile.OriginalName)}\&quot; /&gt;&quot;);</p>
                            <p class="note_contents">というコードにより、ディレクトリー名とファイル名を個別に URL エンコードし、それらを / でつなげる実装にした。</p>
                            <p class="note_contents">URL エンコードだけでは HTML 的に不正な文字が混入するリスクが気になり、</p>
                            <p class="note_contents">Console.WriteLine (WebUtility.UrlEncode (&quot;&lt; &gt; \&quot; &amp; &#39;&quot;));</p>
                            <p class="note_contents">を実行したところ、</p>
                            <p class="note_contents">%3C+%3E+%22+%26+%27</p>
                            <p class="note_contents">が得られた。この文字列にはリスクが全くない。</p>
                            <p class="note_contents">ということは、古いメモのうち1文目は正しいことになる。</p>
                            <p class="note_contents">つまり、HTML エンコードも URL エンコードもされていないディレクトリー名やファイル名が個別に得られるなら、「つなげてから HTML/URL エンコード」でなく、「URL エンコードしてからつなげる」が正解。それで HTML 的に不正な文字も回避される。</p>
                            <p class="note_contents">2文目については、ChatGPT が</p>
                            <p class="note_contents">While it&#39;s generally safe to assume that URLs copied from common web browsers are properly URL-encoded, it&#39;s still a good practice to perform proper HTML encoding before embedding them in HTML content.</p>
                            <p class="note_contents">と言っている。</p>
                            <p class="note_contents">URL がフルで得られるのはたいていブラウザーからのコピペなので、「URL エンコードされているとみなせる文字列を念のために必ず HTML エンコードして出力」という考え方で大丈夫だろう。</p>
                            <p class="note_contents">そういう文字列は、HTML エンコードは行われてい「ない」とみなせる。ブラウザーは、&amp; が見つかって後続の文字列がそれらしいなら、その部分を機械的に HTML デコードする。「URL エンコードされたフル URL が HTML デコードもされている」が問題になる可能性は低い。</p>
                            <p class="note_contents">photoPage と tk2Text は、そもそものパラメーターが異なる。</p>
                            <p class="note_contents">HTML エンコードなのか URL エンコードなのかと右往左往したが、「割れている生文字列なら、URL エンコードしてからつなげる」「まとまっていて URL エンコードされているなら、念のため丸ごと HTML エンコードする」で様子見。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="0f717731-7ec9-43db-93e1-9142d703645a" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">ほかのプロジェクトにおける src/href のエンコーディングのコードをチェック</span>
                    <a href="#0f717731-7ec9-43db-93e1-9142d703645a" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">photoPage と taskKiller くらい。そのうち前者は大丈夫。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">taskKiller もチェックした。HTML ページの出力時に添付ファイルを扱わないので、問題なし。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="20199554-820b-443b-80e5-547d8dd663d6" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">フォントサイズの単位を rem にするべきか考える → 変更した</span>
                    <a href="#20199554-820b-443b-80e5-547d8dd663d6" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <div class="note_ai_generated">
<p>Both <code>rem</code> and <code>em</code> are units of measurement in CSS that are used to define sizes. However, they have different behavior in terms of how they inherit and cascade through the document's structure.</p>
<p><strong><code>rem</code> (Root EM)</strong>:</p>
<ul>
<li><code>rem</code> stands for &quot;root em.&quot; It is relative to the font size of the root element (<code>&lt;html&gt;</code>), not the immediate parent element.</li>
<li>This means that if you set a font size on the root element, it will affect the sizes of all elements using <code>rem</code> units throughout the page.</li>
<li><code>rem</code> is often preferred for setting sizes that need to be consistent across the entire document, such as layout components or global typography.</li>
</ul>
<p><strong><code>em</code> (Ems)</strong>:</p>
<ul>
<li><code>em</code> units are relative to the font size of their direct or nearest parent.</li>
<li>If you set a font size of <code>1.5em</code> on an element, it will be 1.5 times the font size of its parent element.</li>
<li><code>em</code> units are useful when you want a size to be proportionate to the font size of a specific element. However, this can lead to cascading effects as the sizes depend on the font size of each parent element.</li>
</ul>
<p>Which one to use depends on your specific use case:</p>
<ol>
<li><p><strong>Use <code>rem</code></strong>:</p>
<ul>
<li>When you want consistent sizing across the entire document, as it is based on the root element's font size.</li>
<li>For setting global typography styles, layout components, and other elements that need a predictable and consistent size.</li>
</ul>
</li>
<li><p><strong>Use <code>em</code></strong>:</p>
<ul>
<li>When you want sizes to be relative to the font size of a specific parent element.</li>
<li>For creating responsive designs where elements adjust their size according to their immediate parent's font size.</li>
</ul>
</li>
</ol>
<p>In many cases, a combination of both units can be effective. For example, you might use <code>rem</code> for major layout components and <code>em</code> for fine-tuning sizes within those components.</p>
<p>Remember that the choice of unit depends on the design goals, the structure of your HTML, and the desired behavior for text and element sizing.</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div id="87f94c23-19ba-40c4-9ed3-52c6505c26f6" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">「メモ」タスクのメモの出力時に GUID をコメントとして添える</span>
                    <a href="#87f94c23-19ba-40c4-9ed3-52c6505c26f6" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="b0a0dc17-da2d-4f1d-99ea-eb16fff61f9b" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">*-Optimized* が古い添付ファイルと表示される問題を解決</span>
                    <a href="#b0a0dc17-da2d-4f1d-99ea-eb16fff61f9b" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">テスト時の操作ミス。</p>
                            <p class="note_contents">「あああ」タスクなどを作り、ファイルを添付し、Done にするのでなく、なんとなく消してしまったようだ。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="24e1d011-c18b-4423-968e-0d877726eafd" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">親を持たない添付ファイルが検出されるようにする</span>
                    <a href="#24e1d011-c18b-4423-968e-0d877726eafd" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">Info.txt に含まれないものは検出されるはずだが、Info.txt に入っていて親が消えている添付ファイルについては不詳。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">未処理のタスクやメモに添付されているファイルが処理対象にならないようにした。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="17cc9166-2032-4901-86be-e3024d00c7bc" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">小さい画像が拡大される仕様について再考</span>
                    <a href="#17cc9166-2032-4901-86be-e3024d00c7bc" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">さほど問題なし。画像ファイルの扱いにおいて中間データ保持のデータベースが使われない簡易的な実装なので、拡張子で判別するのがコスト的に最適。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="d0d144ad-f571-4a26-b11c-80a7a8858756" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">*-Optimized* が古い添付ファイルと表示される問題を再度調べる</span>
                    <a href="#d0d144ad-f571-4a26-b11c-80a7a8858756" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">古い添付ファイルが残っています: C:\Repositories\Resources\tkLogs\Attached/tk2Text\1-Optimized.jpg<br />
                                古い添付ファイルが残っています: C:\Repositories\Resources\tkLogs\Attached/tk2Text\IMG_20230824_010241_1-Optimized.jpg</p>
                            <p class="note_contents">となっている。</p>
                            <p class="note_contents">パスの区切り文字の問題。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">iAttributesInfo のコンストラクターを更新した。</p>
                            <p class="note_contents">これで問題は起こらなくなった。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">処理対象のディレクトリーのパスなどを Ctrl + Shift + C で Windows 的にコピペし、添付ファイルの相対ディレクトリーパスを Unix 的に書いている自分の設定ミスでもあるが、</p>
                            <p class="note_contents">* パスを基本的に Unix 的に書く<br />
                                * Windows のパスは、Unix 的に書いても仕方ない</p>
                            <p class="note_contents">という二つの両立を図ってのことでもあるので、設定ファイルでなくコードの側で対処した。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">一応全体的にチェックすることも考えたが、Windows で走らせて Windows でログファイルをコミットするという運用に今後変更がなさそうなので見送る。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="ed9c9cf7-3089-4b69-8743-c8aadcd70478" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">「メモ」タスクにファイルを添付した場合の挙動を調べる</span>
                    <a href="#ed9c9cf7-3089-4b69-8743-c8aadcd70478" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">きちんと除外されている。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">出力されないだけでなく、元データの側でも修正できるように、エラーメッセージが表示されるようにした。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="8f8acb89-ac44-4c95-889c-5c655fb71adf" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">v0.12 としてアーカイブ</span>
                    <a href="#8f8acb89-ac44-4c95-889c-5c655fb71adf" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="65ca7921-7768-4fb8-a537-6adeca576556" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">Parameters.txt のコメントだけの段落が無視されるようにする</span>
                    <a href="#65ca7921-7768-4fb8-a537-6adeca576556" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="ee510c87-e404-4037-97a3-71a1434df7be" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">v0.13 としてアーカイブ</span>
                    <a href="#ee510c87-e404-4037-97a3-71a1434df7be" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="9fe5b63e-e853-4abb-b79e-049475e6161c" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">Completed.txt ありのタスクリストをスキップするモードを追加</span>
                    <a href="#9fe5b63e-e853-4abb-b79e-049475e6161c" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">学習系のタスクリストが増えると、tk2Text の実行コストが増す。</p>
                            <p class="note_contents">SSD なので仮に1万の小さなファイルが読み込まれてもシークに明け暮れてダメージを受けるなどはないが、今まさに取り組んでいることのログファイルを更新するたびに大昔のタスクまで読み込ませるのは時間の無駄だ。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">プロジェクト管理システムの開発を決めたので、今後を見すえての処理コストの低減のためのタスクは不要。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="2d8f6ab1-0ee6-4e2d-8897-a563557c5465" class="task canceled">
                <div class="task_contents">&cross;
                    <span class="task_contents">ブログモードを実装</span>
                    <a href="#2d8f6ab1-0ee6-4e2d-8897-a563557c5465" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">ソートの順序が逆転し、添付画像が小さく表示されるモード。</p>
                            <p class="note_contents">さらに、一定期間が経過した投稿においては添付画像がファイル名のみ表示されてもよい。件数の上限でもいい。</p>
                            <p class="note_contents">とても古い投稿の添付画像を改めて Facebook 側と照合するなどは考えにくく、流れていってくれるのが管理において効率的。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">今、とても困っているわけでないし、ブログも、より合理的なワークフローにいずれ切り替える。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="d8b6cd7a-8363-4cdd-ad6a-8f13cc7abe59" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">メモにおいて @ からの段落を検出できるようにする</span>
                    <a href="#d8b6cd7a-8363-4cdd-ad6a-8f13cc7abe59" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">過剰な実装にしない。@ から始まる段落があれば、そこからは AI の回答の引用。@ で終わる段落あるいはメモの終わりに到達すれば、AI の回答の引用の終わり。いずれの @ も除去・トリミングされる。@ 直後にインデントがつくことは考えにくい。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">プロジェクト管理システムの開発を決めたが、開発や学習に関する既存のメモは引き継がれる。最近は AI への依存度が高まっているので、自分の書いた文章と AI による回答の明確な区別があった方が、既存のメモや今後のものをチェックしやすい。</p>
                        </div>
                    </div>
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">Markdig を入れてみた。すぐに使えて、結果も良好。HTML をフォーマットする方法は、ザッと探した限りではなさそう。AI に聞いても「それは Markdig の目的とするところでない」のような回答。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="a214c4b1-4955-4564-983d-a85329e90f44" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">メモの表示位置によってインデントの深さが異なるところの実装をチェック</span>
                    <a href="#a214c4b1-4955-4564-983d-a85329e90f44" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="ddc383a8-2a96-490e-a06c-fc422b117bee" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">@ で終わる段落で引用が止まるかテスト</span>
                    <a href="#ddc383a8-2a96-490e-a06c-fc422b117bee" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">単一のメモに複数の引用部分を入れるテストも行う。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="6a146c0b-01e9-4555-82b7-f665d13db03d" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">空行にインデントがつかないようにする → インデントそのものを諦める</span>
                    <a href="#6a146c0b-01e9-4555-82b7-f665d13db03d" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">空行が入るのは &lt;pre&gt; 部分。インデントをつけるとレンダリング時にそれが入る。&lt;pre&gt;&lt;code ... というのが必ず現れるので &lt;pre&gt; をなくすことも考えたが、その場合、&lt;pre&gt; 内の各行に &lt;br /&gt; をつけることになる。</p>
                            <p class="note_contents">Markdig は良くできている。ChatGPT の回答もそうなので、「そのまま突っ込んで、そのまま出力する」というシンプルな実装にすることで、これら二つの良好な処理に頼りたい。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="e45f44ec-1b93-4a23-9af4-8b2bd6cfc3c1" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">CSS をコンパクト化できるようにする</span>
                    <a href="#e45f44ec-1b93-4a23-9af4-8b2bd6cfc3c1" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">これを試す。</p>
                            <p class="note_contents">trullock/NUglify: NUglify is a HTML, JavaScript and CSS minification Library for .NET (fork of AjaxMin + new features)<br />
                                <a href="https://github.com/trullock/NUglify" target="_blank" class="url">https://github.com/trullock/NUglify</a></p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="07bfcb1c-cd4e-43b4-8a73-c2953215fa66" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">配色を暗くする</span>
                    <a href="#07bfcb1c-cd4e-43b4-8a73-c2953215fa66" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="77739fbf-0abc-4e97-8282-7e758cb9af10" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">Markdig が生成するタグにスタイルをつける</span>
                    <a href="#77739fbf-0abc-4e97-8282-7e758cb9af10" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="ccddb714-7ee1-4077-aa1e-7c3bc2e72b69" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">英文向きのフォントに変更</span>
                    <a href="#ccddb714-7ee1-4077-aa1e-7c3bc2e72b69" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">AI に質問するときは、機械がつくった日本語が読みにくくて、英語で答えてもらうことが多い。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="bfd56cf0-db1e-4f0d-974c-638d4279a4e2" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">CSS を HTML ファイルに入れる</span>
                    <a href="#bfd56cf0-db1e-4f0d-974c-638d4279a4e2" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="7b5ac304-6124-4436-8e1b-9f4232117a88" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents"><a href="https://github.com/xoofx/markdig/blob/master/src/Markdig/MarkdownExtensions.cs" target="_blank" class="url">https://github.com/xoofx/markdig/blob/master/src/Markdig/MarkdownExtensions.cs</a> をチェック</span>
                    <a href="#7b5ac304-6124-4436-8e1b-9f4232117a88" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="6f937746-d1b7-44cb-929a-6c3d89a1d534" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">生成された HTML を文法チェッカーに通す</span>
                    <a href="#6f937746-d1b7-44cb-929a-6c3d89a1d534" class="permalink">&infin;</a>
                </div>
            </div>
            <div class="note">
                <div class="note_contents">
                    <p class="note_contents">CSS について書いておく。</p>
                    <p class="note_contents">ブロック内の最初のブロックの上マージンが消えたので AI に聞けば、マージンの統合の可能性があり、transparent な border が解決策の一つだと。なので、div.note_ai_generated に設定し、ほかでも、うるさいから境界線を消すところで、マージンの統合を回避するため念のために設定した。</p>
                    <!-- Task: 3e9447df-d8cf-4a58-a415-70920c76626b -->
                </div>
            </div>
            <div class="note">
                <div class="note_contents">
                    <p class="note_contents">配色について。</p>
                    <p class="note_contents">真っ黒と真っ白を避けた。</p>
                    <p class="note_contents">背景色は、#111, #333, #555<br />
                        文字色は、#ddd<br />
                        完了は、#115 → #337<br />
                        却下は、#511 → #733<br />
                        リンク色は、#69c</p>
                    <p class="note_contents">奇数多めなので文字色も #eee にしたが、まだ少し明るかった。</p>
                    <!-- Task: 3e9447df-d8cf-4a58-a415-70920c76626b -->
                </div>
            </div>
            <div id="47ceb591-2b47-4605-8597-0cfde81273cf" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">AI の回答が複数回引用されるメモにおいて段落数の一致を確認</span>
                    <a href="#47ceb591-2b47-4605-8597-0cfde81273cf" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">++ の直前に + 1 していての段落の欠落があったので、直せているか確認。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="8be60f6e-247d-4c49-bbfc-9bfa89832479" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">「メモ」タスクのメモに境界線をつける</span>
                    <a href="#8be60f6e-247d-4c49-bbfc-9bfa89832479" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">#333 と #555 で迷い、後者はくどかったので前者に。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="73d982dc-c32b-44de-9ed4-ee5823095721" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">v0.14 としてアーカイブ</span>
                    <a href="#73d982dc-c32b-44de-9ed4-ee5823095721" class="permalink">&infin;</a>
                </div>
            </div>
            <div id="39ed1836-6a0e-43ae-b6b6-32a5d2a4efe4" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">出力フォントを M PLUS 1 Code に変更</span>
                    <a href="#39ed1836-6a0e-43ae-b6b6-32a5d2a4efe4" class="permalink">&infin;</a>
                </div>
                <div class="notes">
                    <div class="note">
                        <div class="note_contents">
                            <p class="note_contents">Google が支援したらしく、かなりの完成度。</p>
                        </div>
                    </div>
                </div>
            </div>
            <div id="814cad03-1b28-4e58-aa6d-9c8f40cb5d73" class="task done">
                <div class="task_contents">&check;
                    <span class="task_contents">v0.15 としてアーカイブ</span>
                    <a href="#814cad03-1b28-4e58-aa6d-9c8f40cb5d73" class="permalink">&infin;</a>
                </div>
            </div>
        </div>
    </body>
</html>
